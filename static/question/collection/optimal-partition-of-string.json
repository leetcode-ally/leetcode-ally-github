{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2405",
      "title": "Optimal Partition of String",
      "titleSlug": "optimal-partition-of-string",
      "content": "<p>Given a string <code>s</code>, partition the string into one or more <strong>substrings</strong> such that the characters in each substring are <strong>unique</strong>. That is, no letter appears in a single substring more than <strong>once</strong>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of substrings in such a partition.</em></p>\n\n<p>Note that each character should belong to exactly one substring in a partition.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abacaba&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nTwo possible partitions are (&quot;a&quot;,&quot;ba&quot;,&quot;cab&quot;,&quot;a&quot;) and (&quot;ab&quot;,&quot;a&quot;,&quot;ca&quot;,&quot;ba&quot;).\nIt can be shown that 4 is the minimum number of substrings needed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ssssss&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:\n</strong>The only valid partition is (&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of only English lowercase letters.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 2483,
      "dislikes": 97,
      "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Least K Repeating Characters\", \"titleSlug\": \"longest-substring-with-at-least-k-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Partition Labels\", \"titleSlug\": \"partition-labels\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Partition Array into Disjoint Intervals\", \"titleSlug\": \"partition-array-into-disjoint-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of Distinct Subarrays With Length K\", \"titleSlug\": \"maximum-sum-of-distinct-subarrays-with-length-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "stats": "{\"totalAccepted\": \"157.7K\", \"totalSubmission\": \"200.5K\", \"totalAcceptedRaw\": 157676, \"totalSubmissionRaw\": 200524, \"acRate\": \"78.6%\"}",
      "hints": [
        "Try to come up with a greedy approach.",
        "From left to right, extend every substring in the partition as much as possible."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-substring-without-repeating-characters",
        "title": "Longest Substring Without Repeating Characters",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
        "title": "Longest Substring with At Least K Repeating Characters",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "partition-labels",
        "title": "Partition Labels",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "partition-array-into-disjoint-intervals",
        "title": "Partition Array into Disjoint Intervals",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
        "title": "Maximum Sum of Distinct Subarrays With Length K",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Try to come up with a greedy approach.",
      "From left to right, extend every substring in the partition as much as possible."
    ],
    "relatedTopics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ]
  }
}