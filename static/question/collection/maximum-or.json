{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2680",
      "title": "Maximum OR",
      "titleSlug": "maximum-or",
      "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code> and an integer <code>k</code>. In an operation, you can choose an element and multiply it by <code>2</code>.</p>\n\n<p>Return <em>the maximum possible value of </em><code>nums[0] | nums[1] | ... | nums[n - 1]</code> <em>that can be obtained after applying the operation on nums at most </em><code>k</code><em> times</em>.</p>\n\n<p>Note that <code>a | b</code> denotes the <strong>bitwise or</strong> between two integers <code>a</code> and <code>b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [12,9], k = 1\n<strong>Output:</strong> 30\n<strong>Explanation:</strong> If we apply the operation to index 1, our new array nums will be equal to [12,18]. Thus, we return the bitwise or of 12 and 18, which is 30.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [8,1,2], k = 2\n<strong>Output:</strong> 35\n<strong>Explanation:</strong> If we apply the operation twice on index 0, we yield a new array of [32,1,2]. Thus, we return 32|1|2 = 35.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 15</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 358,
      "dislikes": 43,
      "similarQuestions": "[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "stats": "{\"totalAccepted\": \"12K\", \"totalSubmission\": \"30K\", \"totalAcceptedRaw\": 12048, \"totalSubmissionRaw\": 30014, \"acRate\": \"40.1%\"}",
      "hints": [
        "The optimal solution should apply all the k operations on a single number.",
        "Calculate the prefix or and the suffix or and perform k operations over each element, and maximize the answer."
      ]
    },
    "similar": [],
    "hints": [
      "The optimal solution should apply all the k operations on a single number.",
      "Calculate the prefix or and the suffix or and perform k operations over each element, and maximize the answer."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ]
  }
}