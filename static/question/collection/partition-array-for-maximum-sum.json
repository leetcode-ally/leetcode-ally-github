{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1043",
      "title": "Partition Array for Maximum Sum",
      "titleSlug": "partition-array-for-maximum-sum",
      "content": "<p>Given an integer array <code>arr</code>, partition the array into (contiguous) subarrays of length <strong>at most</strong> <code>k</code>. After partitioning, each subarray has their values changed to become the maximum value of that subarray.</p>\n\n<p>Return <em>the largest sum of the given array after partitioning. Test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,15,7,9,2,5,10], k = 3\n<strong>Output:</strong> 84\n<strong>Explanation:</strong> arr becomes [15,15,15,9,10,10,10]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4\n<strong>Output:</strong> 83\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1], k = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 3710,
      "dislikes": 248,
      "similarQuestions": "[{\"title\": \"Subsequence of Size K With the Largest Even Sum\", \"titleSlug\": \"subsequence-of-size-k-with-the-largest-even-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Partition String Into Minimum Beautiful Substrings\", \"titleSlug\": \"partition-string-into-minimum-beautiful-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "stats": "{\"totalAccepted\": \"90.1K\", \"totalSubmission\": \"124.5K\", \"totalAcceptedRaw\": 90116, \"totalSubmissionRaw\": 124520, \"acRate\": \"72.4%\"}",
      "hints": [
        "Think dynamic programming:  dp[i] will be the answer for array A[0], ..., A[i-1].",
        "For j = 1 .. k that keeps everything in bounds, dp[i] is the maximum of dp[i-j] + max(A[i-1], ..., A[i-j]) * j ."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
        "title": "Subsequence of Size K With the Largest Even Sum",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "partition-string-into-minimum-beautiful-substrings",
        "title": "Partition String Into Minimum Beautiful Substrings",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Think dynamic programming:  dp[i] will be the answer for array A[0], ..., A[i-1].",
      "For j = 1 .. k that keeps everything in bounds, dp[i] is the maximum of dp[i-j] + max(A[i-1], ..., A[i-j]) * j ."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ]
  }
}