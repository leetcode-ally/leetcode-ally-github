{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1671",
      "title": "Minimum Number of Removals to Make Mountain Array",
      "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
      "content": "<p>You may recall that an array <code>arr</code> is a <strong>mountain array</strong> if and only if:</p>\n\n<ul>\n\t<li><code>arr.length &gt;= 3</code></li>\n\t<li>There exists some index <code>i</code> (<strong>0-indexed</strong>) with <code>0 &lt; i &lt; arr.length - 1</code> such that:\n\t<ul>\n\t\t<li><code>arr[0] &lt; arr[1] &lt; ... &lt; arr[i - 1] &lt; arr[i]</code></li>\n\t\t<li><code>arr[i] &gt; arr[i + 1] &gt; ... &gt; arr[arr.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given an integer array <code>nums</code>​​​, return <em>the <strong>minimum</strong> number of elements to remove to make </em><code>nums<em>​​​</em></code><em> </em><em>a <strong>mountain array</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The array itself is a mountain array so we do not need to remove any elements.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,1,5,6,2,3,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> One solution is to remove the elements at indices 0, 1, and 5, making the array nums = [1,5,6,3,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li>It is guaranteed that you can make a mountain array out of <code>nums</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 1522,
      "dislikes": 20,
      "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Mountain in Array\", \"titleSlug\": \"longest-mountain-in-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Mountain Array\", \"titleSlug\": \"valid-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find in Mountain Array\", \"titleSlug\": \"find-in-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Beautiful Towers II\", \"titleSlug\": \"beautiful-towers-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Beautiful Towers I\", \"titleSlug\": \"beautiful-towers-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"65.2K\", \"totalAcceptedRaw\": 27139, \"totalSubmissionRaw\": 65191, \"acRate\": \"41.6%\"}",
      "hints": [
        "Think the opposite direction instead of minimum elements to remove the maximum mountain subsequence",
        "Think of LIS it's kind of close"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-increasing-subsequence",
        "title": "Longest Increasing Subsequence",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-mountain-in-array",
        "title": "Longest Mountain in Array",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "peak-index-in-a-mountain-array",
        "title": "Peak Index in a Mountain Array",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "valid-mountain-array",
        "title": "Valid Mountain Array",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "find-in-mountain-array",
        "title": "Find in Mountain Array",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "beautiful-towers-ii",
        "title": "Beautiful Towers II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "beautiful-towers-i",
        "title": "Beautiful Towers I",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Think the opposite direction instead of minimum elements to remove the maximum mountain subsequence",
      "Think of LIS it's kind of close"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ]
  }
}