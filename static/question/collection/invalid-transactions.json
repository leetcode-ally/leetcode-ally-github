{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1169",
      "title": "Invalid Transactions",
      "titleSlug": "invalid-transactions",
      "content": "<p>A transaction is possibly invalid if:</p>\n\n<ul>\n\t<li>the amount exceeds <code>$1000</code>, or;</li>\n\t<li>if it occurs within (and including) <code>60</code> minutes of another transaction with the <strong>same name</strong> in a <strong>different city</strong>.</li>\n</ul>\n\n<p>You are given an array of strings <code>transaction</code> where <code>transactions[i]</code> consists of comma-separated values representing the name, time (in minutes), amount, and city of the transaction.</p>\n\n<p>Return a list of <code>transactions</code> that are possibly invalid. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Output:</strong> [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Explanation:</strong> The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;alice,50,1200,mtv&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;bob,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;bob,50,1200,mtv&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>transactions.length &lt;= 1000</code></li>\n\t<li>Each <code>transactions[i]</code> takes the form <code>&quot;{name},{time},{amount},{city}&quot;</code></li>\n\t<li>Each <code>{name}</code> and <code>{city}</code> consist of lowercase English letters, and have lengths between <code>1</code> and <code>10</code>.</li>\n\t<li>Each <code>{time}</code> consist of digits, and represent an integer between <code>0</code> and <code>1000</code>.</li>\n\t<li>Each <code>{amount}</code> consist of digits, and represent an integer between <code>0</code> and <code>2000</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 510,
      "dislikes": 2259,
      "similarQuestions": "[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "stats": "{\"totalAccepted\": \"71K\", \"totalSubmission\": \"227.8K\", \"totalAcceptedRaw\": 70974, \"totalSubmissionRaw\": 227816, \"acRate\": \"31.2%\"}",
      "hints": [
        "Split each string into four arrays.",
        "For each transaction check if it's invalid, you can do this with just a loop with help of the four arrays generated on step 1.",
        "At the end you perform O(N ^ 2) operations."
      ]
    },
    "similar": [],
    "hints": [
      "Split each string into four arrays.",
      "For each transaction check if it's invalid, you can do this with just a loop with help of the four arrays generated on step 1.",
      "At the end you perform O(N ^ 2) operations."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ]
  }
}