{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "75",
      "title": "Sort Colors",
      "titleSlug": "sort-colors",
      "content": "<p>Given an array <code>nums</code> with <code>n</code> objects colored red, white, or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a> </strong>so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p>\n\n<p>We will use the integers <code>0</code>, <code>1</code>, and <code>2</code> to represent the color red, white, and blue, respectively.</p>\n\n<p>You must solve this problem without using the library&#39;s sort function.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,0,2,1,1,0]\n<strong>Output:</strong> [0,0,1,1,2,2]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,0,1]\n<strong>Output:</strong> [0,1,2]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 300</code></li>\n\t<li><code>nums[i]</code> is either <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong>&nbsp;Could you come up with a one-pass algorithm using only&nbsp;constant extra space?</p>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 17267,
      "dislikes": 603,
      "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "stats": "{\"totalAccepted\": \"1.7M\", \"totalSubmission\": \"2.8M\", \"totalAcceptedRaw\": 1720866, \"totalSubmissionRaw\": 2817574, \"acRate\": \"61.1%\"}",
      "hints": [
        "A rather straight forward solution is a two-pass algorithm using counting sort.",
        "Iterate the array counting number of 0's, 1's, and 2's.",
        "Overwrite array with the total number of 0's, then 1's and followed by 2's."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "sort-list",
        "title": "Sort List",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "wiggle-sort",
        "title": "Wiggle Sort",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "wiggle-sort-ii",
        "title": "Wiggle Sort II",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "A rather straight forward solution is a two-pass algorithm using counting sort.",
      "Iterate the array counting number of 0's, 1's, and 2's.",
      "Overwrite array with the total number of 0's, then 1's and followed by 2's."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ]
  }
}