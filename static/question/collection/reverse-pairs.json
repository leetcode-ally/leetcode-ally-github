{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "493",
      "title": "Reverse Pairs",
      "titleSlug": "reverse-pairs",
      "content": "<p>Given an integer array <code>nums</code>, return <em>the number of <strong>reverse pairs</strong> in the array</em>.</p>\n\n<p>A <strong>reverse pair</strong> is a pair <code>(i, j)</code> where:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; j &lt; nums.length</code> and</li>\n\t<li><code>nums[i] &gt; 2 * nums[j]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The reverse pairs are:\n(1, 4) --&gt; nums[1] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 3, nums[4] = 1, 3 &gt; 2 * 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,3,5,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The reverse pairs are:\n(1, 4) --&gt; nums[1] = 4, nums[4] = 1, 4 &gt; 2 * 1\n(2, 4) --&gt; nums[2] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 5, nums[4] = 1, 5 &gt; 2 * 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 5818,
      "dislikes": 250,
      "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Binary Indexed Tree",
          "slug": "binary-indexed-tree"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Merge Sort",
          "slug": "merge-sort"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "stats": "{\"totalAccepted\": \"156K\", \"totalSubmission\": \"510.5K\", \"totalAcceptedRaw\": 155971, \"totalSubmissionRaw\": 510498, \"acRate\": \"30.6%\"}",
      "hints": [
        "Use the merge-sort technique.",
        "Divide the array into two parts and sort them.",
        "For each integer in the first part, count the number of integers that satisfy the condition from the second part. Use the pointer to help you in the counting process."
      ]
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "count-of-smaller-numbers-after-self",
        "title": "Count of Smaller Numbers After Self",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "count-of-range-sum",
        "title": "Count of Range Sum",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Use the merge-sort technique.",
      "Divide the array into two parts and sort them.",
      "For each integer in the first part, count the number of integers that satisfy the condition from the second part. Use the pointer to help you in the counting process."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ]
  }
}