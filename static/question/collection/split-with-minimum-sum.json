{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2578",
      "title": "Split With Minimum Sum",
      "titleSlug": "split-with-minimum-sum",
      "content": "<p>Given a positive integer <code>num</code>, split it into two non-negative integers <code>num1</code> and <code>num2</code> such that:</p>\n\n<ul>\n\t<li>The concatenation of <code>num1</code> and <code>num2</code> is a permutation of <code>num</code>.\n\n\t<ul>\n\t\t<li>In other words, the sum of the number of occurrences of each digit in <code>num1</code> and <code>num2</code> is equal to the number of occurrences of that digit in <code>num</code>.</li>\n\t</ul>\n\t</li>\n\t<li><code>num1</code> and <code>num2</code> can contain leading zeros.</li>\n</ul>\n\n<p>Return <em>the <strong>minimum</strong> possible sum of</em> <code>num1</code> <em>and</em> <code>num2</code>.</p>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li>It is guaranteed that <code>num</code> does not contain any leading zeros.</li>\n\t<li>The order of occurrence of the digits in <code>num1</code> and <code>num2</code> may differ from the order of occurrence of <code>num</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 4325\n<strong>Output:</strong> 59\n<strong>Explanation:</strong> We can split 4325 so that <code>num1 </code>is 24 and num2<code> is </code>35, giving a sum of 59. We can prove that 59 is indeed the minimal possible sum.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 687\n<strong>Output:</strong> 75\n<strong>Explanation:</strong> We can split 687 so that <code>num1</code> is 68 and <code>num2 </code>is 7, which would give an optimal sum of 75.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>10 &lt;= num &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 332,
      "dislikes": 27,
      "similarQuestions": "[{\"title\": \"Partition Equal Subset Sum\", \"titleSlug\": \"partition-equal-subset-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Move Chips to The Same Position\", \"titleSlug\": \"minimum-cost-to-move-chips-to-the-same-position\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Partition Array Into Two Arrays to Minimize Sum Difference\", \"titleSlug\": \"partition-array-into-two-arrays-to-minimize-sum-difference\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "stats": "{\"totalAccepted\": \"29K\", \"totalSubmission\": \"41.7K\", \"totalAcceptedRaw\": 28964, \"totalSubmissionRaw\": 41713, \"acRate\": \"69.4%\"}",
      "hints": [
        "Sort the digits of num in non decreasing order.",
        "Assign digits to num1 and num2 alternatively."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "partition-equal-subset-sum",
        "title": "Partition Equal Subset Sum",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
        "title": "Minimum Cost to Move Chips to The Same Position",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
        "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Sort the digits of num in non decreasing order.",
      "Assign digits to num1 and num2 alternatively."
    ],
    "relatedTopics": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ]
  }
}