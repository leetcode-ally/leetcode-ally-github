{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2024",
      "title": "Maximize the Confusion of an Exam",
      "titleSlug": "maximize-the-confusion-of-an-exam",
      "content": "<p>A teacher is writing a test with <code>n</code> true/false questions, with <code>&#39;T&#39;</code> denoting true and <code>&#39;F&#39;</code> denoting false. He wants to confuse the students by <strong>maximizing</strong> the number of <strong>consecutive</strong> questions with the <strong>same</strong> answer (multiple trues or multiple falses in a row).</p>\n\n<p>You are given a string <code>answerKey</code>, where <code>answerKey[i]</code> is the original answer to the <code>i<sup>th</sup></code> question. In addition, you are given an integer <code>k</code>, the maximum number of times you may perform the following operation:</p>\n\n<ul>\n\t<li>Change the answer key for any question to <code>&#39;T&#39;</code> or <code>&#39;F&#39;</code> (i.e., set <code>answerKey[i]</code> to <code>&#39;T&#39;</code> or <code>&#39;F&#39;</code>).</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> number of consecutive</em> <code>&#39;T&#39;</code>s or <code>&#39;F&#39;</code>s <em>in the answer key after performing the operation at most</em> <code>k</code> <em>times</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> answerKey = &quot;TTFF&quot;, k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> We can replace both the &#39;F&#39;s with &#39;T&#39;s to make answerKey = &quot;<u>TTTT</u>&quot;.\nThere are four consecutive &#39;T&#39;s.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> answerKey = &quot;TFFT&quot;, k = 1\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can replace the first &#39;T&#39; with an &#39;F&#39; to make answerKey = &quot;<u>FFF</u>T&quot;.\nAlternatively, we can replace the second &#39;T&#39; with an &#39;F&#39; to make answerKey = &quot;T<u>FFF</u>&quot;.\nIn both cases, there are three consecutive &#39;F&#39;s.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> answerKey = &quot;TTFTTFTT&quot;, k = 1\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> We can replace the first &#39;F&#39; to make answerKey = &quot;<u>TTTTT</u>FTT&quot;\nAlternatively, we can replace the second &#39;F&#39; to make answerKey = &quot;TTF<u>TTTTT</u>&quot;. \nIn both cases, there are five consecutive &#39;T&#39;s.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == answerKey.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>answerKey[i]</code> is either <code>&#39;T&#39;</code> or <code>&#39;F&#39;</code></li>\n\t<li><code>1 &lt;= k &lt;= n</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 2764,
      "dislikes": 39,
      "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Days to Make m Bouquets\", \"titleSlug\": \"minimum-number-of-days-to-make-m-bouquets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "stats": "{\"totalAccepted\": \"97.1K\", \"totalSubmission\": \"144.7K\", \"totalAcceptedRaw\": 97080, \"totalSubmissionRaw\": 144732, \"acRate\": \"67.1%\"}",
      "hints": [
        "Can we use the maximum length at the previous position to help us find the answer for the current position?",
        "Can we use binary search to find the maximum consecutive same answer at every position?"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
        "title": "Longest Substring with At Most K Distinct Characters",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-repeating-character-replacement",
        "title": "Longest Repeating Character Replacement",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "max-consecutive-ones-iii",
        "title": "Max Consecutive Ones III",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
        "title": "Minimum Number of Days to Make m Bouquets",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-nice-subarray",
        "title": "Longest Nice Subarray",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Can we use the maximum length at the previous position to help us find the answer for the current position?",
      "Can we use binary search to find the maximum consecutive same answer at every position?"
    ],
    "relatedTopics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ]
  }
}