{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1690",
      "title": "Stone Game VII",
      "titleSlug": "stone-game-vii",
      "content": "<p>Alice and Bob take turns playing a game, with <strong>Alice starting first</strong>.</p>\n\n<p>There are <code>n</code> stones arranged in a row. On each player&#39;s turn, they can <strong>remove</strong> either the leftmost stone or the rightmost stone from the row and receive points equal to the <strong>sum</strong> of the remaining stones&#39; values in the row. The winner is the one with the higher score when there are no stones left to remove.</p>\n\n<p>Bob found that he will always lose this game (poor Bob, he always loses), so he decided to <strong>minimize the score&#39;s difference</strong>. Alice&#39;s goal is to <strong>maximize the difference</strong> in the score.</p>\n\n<p>Given an array of integers <code>stones</code> where <code>stones[i]</code> represents the value of the <code>i<sup>th</sup></code> stone <strong>from the left</strong>, return <em>the <strong>difference</strong> in Alice and Bob&#39;s score if they both play <strong>optimally</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [5,3,1,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> \n- Alice removes 2 and gets 5 + 3 + 1 + 4 = 13 points. Alice = 13, Bob = 0, stones = [5,3,1,4].\n- Bob removes 5 and gets 3 + 1 + 4 = 8 points. Alice = 13, Bob = 8, stones = [3,1,4].\n- Alice removes 3 and gets 1 + 4 = 5 points. Alice = 18, Bob = 8, stones = [1,4].\n- Bob removes 1 and gets 4 points. Alice = 18, Bob = 12, stones = [4].\n- Alice removes 4 and gets 0 points. Alice = 18, Bob = 12, stones = [].\nThe score difference is 18 - 12 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [7,90,5,1,100,10,10,2]\n<strong>Output:</strong> 122</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == stones.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 960,
      "dislikes": 160,
      "similarQuestions": "[{\"title\": \"Stone Game\", \"titleSlug\": \"stone-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game II\", \"titleSlug\": \"stone-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game III\", \"titleSlug\": \"stone-game-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IV\", \"titleSlug\": \"stone-game-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Score from Performing Multiplication Operations\", \"titleSlug\": \"maximum-score-from-performing-multiplication-operations\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VIII\", \"titleSlug\": \"stone-game-viii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IX\", \"titleSlug\": \"stone-game-ix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "stats": "{\"totalAccepted\": \"33.9K\", \"totalSubmission\": \"58.5K\", \"totalAcceptedRaw\": 33921, \"totalSubmissionRaw\": 58525, \"acRate\": \"58.0%\"}",
      "hints": [
        "The constraints are small enough for an N^2 solution.",
        "Try using dynamic programming."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game",
        "title": "Stone Game",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-ii",
        "title": "Stone Game II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-iii",
        "title": "Stone Game III",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-iv",
        "title": "Stone Game IV",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-v",
        "title": "Stone Game V",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-vi",
        "title": "Stone Game VI",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "maximum-score-from-performing-multiplication-operations",
        "title": "Maximum Score from Performing Multiplication Operations",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-viii",
        "title": "Stone Game VIII",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-ix",
        "title": "Stone Game IX",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "The constraints are small enough for an N^2 solution.",
      "Try using dynamic programming."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ]
  }
}