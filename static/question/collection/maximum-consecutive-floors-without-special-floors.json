{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2274",
      "title": "Maximum Consecutive Floors Without Special Floors",
      "titleSlug": "maximum-consecutive-floors-without-special-floors",
      "content": "<p>Alice manages a company and has rented some floors of a building as office space. Alice has decided some of these floors should be <strong>special floors</strong>, used for relaxation only.</p>\n\n<p>You are given two integers <code>bottom</code> and <code>top</code>, which denote that Alice has rented all the floors from <code>bottom</code> to <code>top</code> (<strong>inclusive</strong>). You are also given the integer array <code>special</code>, where <code>special[i]</code> denotes a special floor that Alice has designated for relaxation.</p>\n\n<p>Return <em>the <strong>maximum</strong> number of consecutive floors without a special floor</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> bottom = 2, top = 9, special = [4,6]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The following are the ranges (inclusive) of consecutive floors without a special floor:\n- (2, 3) with a total amount of 2 floors.\n- (5, 5) with a total amount of 1 floor.\n- (7, 9) with a total amount of 3 floors.\nTherefore, we return the maximum number which is 3 floors.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> bottom = 6, top = 8, special = [7,6,8]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Every floor rented is a special floor, so we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= special.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= bottom &lt;= special[i] &lt;= top &lt;= 10<sup>9</sup></code></li>\n\t<li>All the values of <code>special</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 377,
      "dislikes": 35,
      "similarQuestions": "[{\"title\": \"Longest Consecutive Sequence\", \"titleSlug\": \"longest-consecutive-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Gap\", \"titleSlug\": \"maximum-gap\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "stats": "{\"totalAccepted\": \"29.7K\", \"totalSubmission\": \"57.3K\", \"totalAcceptedRaw\": 29681, \"totalSubmissionRaw\": 57252, \"acRate\": \"51.8%\"}",
      "hints": [
        "Say we have a pair of special floors (x, y) with no other special floors in between. There are x - y - 1 consecutive floors in between them without a special floor.",
        "Say there are n special floors. After sorting special, we have answer = max(answer, special[i] – special[i – 1] – 1) for all 0 < i ≤ n.",
        "However, there are two special cases left to consider: the floors before special[0] and after special[n-1].",
        "To consider these cases, we have answer = max(answer, special[0] – bottom, top – special[n-1])."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-consecutive-sequence",
        "title": "Longest Consecutive Sequence",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-gap",
        "title": "Maximum Gap",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Say we have a pair of special floors (x, y) with no other special floors in between. There are x - y - 1 consecutive floors in between them without a special floor.",
      "Say there are n special floors. After sorting special, we have answer = max(answer, special[i] – special[i – 1] – 1) for all 0 < i ≤ n.",
      "However, there are two special cases left to consider: the floors before special[0] and after special[n-1].",
      "To consider these cases, we have answer = max(answer, special[0] – bottom, top – special[n-1])."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ]
  }
}