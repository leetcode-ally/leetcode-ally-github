{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "918",
      "title": "Maximum Sum Circular Subarray",
      "titleSlug": "maximum-sum-circular-subarray",
      "content": "<p>Given a <strong>circular integer array</strong> <code>nums</code> of length <code>n</code>, return <em>the maximum possible sum of a non-empty <strong>subarray</strong> of </em><code>nums</code>.</p>\n\n<p>A <strong>circular array</strong> means the end of the array connects to the beginning of the array. Formally, the next element of <code>nums[i]</code> is <code>nums[(i + 1) % n]</code> and the previous element of <code>nums[i]</code> is <code>nums[(i - 1 + n) % n]</code>.</p>\n\n<p>A <strong>subarray</strong> may only include each element of the fixed buffer <code>nums</code> at most once. Formally, for a subarray <code>nums[i], nums[i + 1], ..., nums[j]</code>, there does not exist <code>i &lt;= k1</code>, <code>k2 &lt;= j</code> with <code>k1 % n == k2 % n</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,-2,3,-2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Subarray [3] has maximum sum 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,-3,5]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> Subarray [5,5] has maximum sum 5 + 5 = 10.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-3,-2,-3]\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> Subarray [-2] has maximum sum -2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 6348,
      "dislikes": 278,
      "similarQuestions": "[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Divide and Conquer",
          "slug": "divide-and-conquer"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Queue",
          "slug": "queue"
        },
        {
          "name": "Monotonic Queue",
          "slug": "monotonic-queue"
        }
      ],
      "stats": "{\"totalAccepted\": \"237.9K\", \"totalSubmission\": \"539K\", \"totalAcceptedRaw\": 237905, \"totalSubmissionRaw\": 539023, \"acRate\": \"44.1%\"}",
      "hints": [
        "For those of you who are familiar with the <b>Kadane's algorithm</b>, think in terms of that. For the newbies, Kadane's algorithm is used to finding the maximum sum subarray from a given array. This problem is a twist on that idea and it is advisable to read up on that algorithm first before starting this problem. Unless you already have a great algorithm brewing up in your mind in which case, go right ahead!",
        "What is an alternate way of representing a circular array so that it appears to be a straight array?\r\nEssentially, there are two cases of this problem that we need to take care of. Let's look at the figure below to understand those two cases:\r\n\r\n<br>\r\n<img src=\"https://assets.leetcode.com/uploads/2019/10/20/circular_subarray_hint_1.png\" width=\"700\"/>",
        "The first case can be handled by the good old Kadane's algorithm. However, is there a smarter way of going about handling the second case as well?"
      ]
    },
    "similar": [],
    "hints": [
      "For those of you who are familiar with the <b>Kadane's algorithm</b>, think in terms of that. For the newbies, Kadane's algorithm is used to finding the maximum sum subarray from a given array. This problem is a twist on that idea and it is advisable to read up on that algorithm first before starting this problem. Unless you already have a great algorithm brewing up in your mind in which case, go right ahead!",
      "What is an alternate way of representing a circular array so that it appears to be a straight array?\r\nEssentially, there are two cases of this problem that we need to take care of. Let's look at the figure below to understand those two cases:\r\n\r\n<br>\r\n<img src=\"https://assets.leetcode.com/uploads/2019/10/20/circular_subarray_hint_1.png\" width=\"700\"/>",
      "The first case can be handled by the good old Kadane's algorithm. However, is there a smarter way of going about handling the second case as well?"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ]
  }
}