{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "394",
      "title": "Decode String",
      "titleSlug": "decode-string",
      "content": "<p>Given an encoded string, return its decoded string.</p>\n\n<p>The encoding rule is: <code>k[encoded_string]</code>, where the <code>encoded_string</code> inside the square brackets is being repeated exactly <code>k</code> times. Note that <code>k</code> is guaranteed to be a positive integer.</p>\n\n<p>You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <code>k</code>. For example, there will not be input like <code>3a</code> or <code>2[4]</code>.</p>\n\n<p>The test cases are generated so that the length of the output will never exceed <code>10<sup>5</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3[a]2[bc]&quot;\n<strong>Output:</strong> &quot;aaabcbc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;3[a2[c]]&quot;\n<strong>Output:</strong> &quot;accaccacc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;2[abc]3[cd]ef&quot;\n<strong>Output:</strong> &quot;abcabccdcdcdef&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 30</code></li>\n\t<li><code>s</code> consists of lowercase English letters, digits, and square brackets <code>&#39;[]&#39;</code>.</li>\n\t<li><code>s</code> is guaranteed to be <strong>a valid</strong> input.</li>\n\t<li>All the integers in <code>s</code> are in the range <code>[1, 300]</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 12167,
      "dislikes": 561,
      "similarQuestions": "[{\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Recursion",
          "slug": "recursion"
        }
      ],
      "stats": "{\"totalAccepted\": \"738.8K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 738835, \"totalSubmissionRaw\": 1257609, \"acRate\": \"58.7%\"}",
      "hints": []
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "encode-string-with-shortest-length",
        "title": "Encode String with Shortest Length",
        "isPaidOnly": true
      },
      {
        "difficulty": "Hard",
        "titleSlug": "number-of-atoms",
        "title": "Number of Atoms",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "brace-expansion",
        "title": "Brace Expansion",
        "isPaidOnly": true
      }
    ],
    "hints": [],
    "relatedTopics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ]
  }
}