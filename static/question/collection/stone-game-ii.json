{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1140",
      "title": "Stone Game II",
      "titleSlug": "stone-game-ii",
      "content": "<p>Alice and Bob continue their&nbsp;games with piles of stones.&nbsp; There are a number of&nbsp;piles&nbsp;<strong>arranged in a row</strong>, and each pile has a positive integer number of stones&nbsp;<code>piles[i]</code>.&nbsp; The objective of the game is to end with the most&nbsp;stones.&nbsp;</p>\n\n<p>Alice&nbsp;and Bob take turns, with Alice starting first.&nbsp; Initially, <code>M = 1</code>.</p>\n\n<p>On each player&#39;s turn, that player&nbsp;can take <strong>all the stones</strong> in the <strong>first</strong> <code>X</code> remaining piles, where <code>1 &lt;= X &lt;= 2M</code>.&nbsp; Then, we set&nbsp;<code>M = max(M, X)</code>.</p>\n\n<p>The game continues until all the stones have been taken.</p>\n\n<p>Assuming Alice and Bob play optimally, return the maximum number of stones Alice&nbsp;can get.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [2,7,9,4,4]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong>  If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it&#39;s larger. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [1,2,3,4,5,100]\n<strong>Output:</strong> 104\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= piles[i]&nbsp;&lt;= 10<sup>4</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 2757,
      "dislikes": 610,
      "similarQuestions": "[{\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VIII\", \"titleSlug\": \"stone-game-viii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IX\", \"titleSlug\": \"stone-game-ix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "stats": "{\"totalAccepted\": \"90.3K\", \"totalSubmission\": \"132.6K\", \"totalAcceptedRaw\": 90331, \"totalSubmissionRaw\": 132572, \"acRate\": \"68.1%\"}",
      "hints": [
        "Use dynamic programming: the states are (i, m) for the answer of piles[i:] and that given m."
      ]
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-v",
        "title": "Stone Game V",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-vi",
        "title": "Stone Game VI",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-vii",
        "title": "Stone Game VII",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-viii",
        "title": "Stone Game VIII",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-ix",
        "title": "Stone Game IX",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Use dynamic programming: the states are (i, m) for the answer of piles[i:] and that given m."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ]
  }
}