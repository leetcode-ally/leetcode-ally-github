{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2912",
            "title": "Number of Ways to Reach Destination in the Grid",
            "titleSlug": "number-of-ways-to-reach-destination-in-the-grid",
            "content": null,
            "isPaidOnly": true,
            "difficulty": "Hard",
            "likes": 15,
            "dislikes": 0,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "stats": "{\"totalAccepted\": \"808\", \"totalSubmission\": \"1.3K\", \"totalAcceptedRaw\": 808, \"totalSubmissionRaw\": 1255, \"acRate\": \"64.4%\"}",
            "hints": [
                "We are asked to count the number of sequences of length <code>k + 1</code> that start from <code>(x<sub>s</sub>, y<sub>s</sub>)</code> and end with <code>(x<sub>d</sub>, y<sub>d</sub>)</code>. i.e., <code>(x<sub>s</sub>, y<sub>s</sub>), (x<sub>1</sub>, y<sub>1</sub>), ..., (x<sub>k - 1</sub>, y<sub>k - 1</sub>), (x<sub>d</sub>, y<sub>d</sub>)</code>.",
                "The key point is to see <code>x</code> and <code>y</code> separately.",
                "Suppose we do <code>i</code> vertical moves and <code>k - i</code> horizontal moves.",
                "In each vertical move, we change only <code>y</code>. Now let's count the number of sequences of length <code>i + 1</code> that start with <code>source[2]</code> and end with <code>dest[2]</code>. Let's call this number <code>vertical_count</code>.",
                "Do the same for horizontal moves and let it be <code>horizontal_count</code>.",
                "For each <code>i</code>, the number of ways would be <code>vertical_count * horizontal_count * C(n, i)</code> since the order of vertical and horizontal moves could be arbitrary."
            ]
        },
        "similar": [],
        "hints": [
            "We are asked to count the number of sequences of length <code>k + 1</code> that start from <code>(x<sub>s</sub>, y<sub>s</sub>)</code> and end with <code>(x<sub>d</sub>, y<sub>d</sub>)</code>. i.e., <code>(x<sub>s</sub>, y<sub>s</sub>), (x<sub>1</sub>, y<sub>1</sub>), ..., (x<sub>k - 1</sub>, y<sub>k - 1</sub>), (x<sub>d</sub>, y<sub>d</sub>)</code>.",
            "The key point is to see <code>x</code> and <code>y</code> separately.",
            "Suppose we do <code>i</code> vertical moves and <code>k - i</code> horizontal moves.",
            "In each vertical move, we change only <code>y</code>. Now let's count the number of sequences of length <code>i + 1</code> that start with <code>source[2]</code> and end with <code>dest[2]</code>. Let's call this number <code>vertical_count</code>.",
            "Do the same for horizontal moves and let it be <code>horizontal_count</code>.",
            "For each <code>i</code>, the number of ways would be <code>vertical_count * horizontal_count * C(n, i)</code> since the order of vertical and horizontal moves could be arbitrary."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ]
    }
}