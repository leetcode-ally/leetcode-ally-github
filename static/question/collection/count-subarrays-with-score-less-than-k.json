{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2302",
      "title": "Count Subarrays With Score Less Than K",
      "titleSlug": "count-subarrays-with-score-less-than-k",
      "content": "<p>The <strong>score</strong> of an array is defined as the <strong>product</strong> of its sum and its length.</p>\n\n<ul>\n\t<li>For example, the score of <code>[1, 2, 3, 4, 5]</code> is <code>(1 + 2 + 3 + 4 + 5) * 5 = 75</code>.</li>\n</ul>\n\n<p>Given a positive integer array <code>nums</code> and an integer <code>k</code>, return <em>the <strong>number of non-empty subarrays</strong> of</em> <code>nums</code> <em>whose score is <strong>strictly less</strong> than</em> <code>k</code>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous sequence of elements within an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,4,3,5], k = 10\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>\nThe 6 subarrays having scores less than 10 are:\n- [2] with score 2 * 1 = 2.\n- [1] with score 1 * 1 = 1.\n- [4] with score 4 * 1 = 4.\n- [3] with score 3 * 1 = 3. \n- [5] with score 5 * 1 = 5.\n- [2,1] with score (2 + 1) * 2 = 6.\nNote that subarrays such as [1,4] and [4,3,5] are not considered because their scores are 10 and 36 respectively, while we need scores strictly less than 10.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1], k = 5\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nEvery subarray except [1,1,1] has a score less than 5.\n[1,1,1] has a score (1 + 1 + 1) * 3 = 9, which is greater than 5.\nThus, there are 5 subarrays having scores less than 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>15</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 924,
      "dislikes": 21,
      "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Subarrays With Sum\", \"titleSlug\": \"binary-subarrays-with-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "stats": "{\"totalAccepted\": \"21.8K\", \"totalSubmission\": \"40.7K\", \"totalAcceptedRaw\": 21831, \"totalSubmissionRaw\": 40651, \"acRate\": \"53.7%\"}",
      "hints": [
        "If we add an element to a list of elements, how will the score change?",
        "How can we use this to determine the number of subarrays with score less than k in a given range?",
        "How can we use “Two Pointers” to generalize the solution, and thus count all possible subarrays?"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-subarray",
        "title": "Maximum Subarray",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "subarray-product-less-than-k",
        "title": "Subarray Product Less Than K",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "binary-subarrays-with-sum",
        "title": "Binary Subarrays With Sum",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "If we add an element to a list of elements, how will the score change?",
      "How can we use this to determine the number of subarrays with score less than k in a given range?",
      "How can we use “Two Pointers” to generalize the solution, and thus count all possible subarrays?"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ]
  }
}