{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1004",
      "title": "Max Consecutive Ones III",
      "titleSlug": "max-consecutive-ones-iii",
      "content": "<p>Given a binary array <code>nums</code> and an integer <code>k</code>, return <em>the maximum number of consecutive </em><code>1</code><em>&#39;s in the array if you can flip at most</em> <code>k</code> <code>0</code>&#39;s.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [1,1,1,0,0,<u><strong>1</strong>,1,1,1,1,<strong>1</strong></u>]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> [0,0,<u>1,1,<strong>1</strong>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1</u>,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n\t<li><code>0 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 7973,
      "dislikes": 105,
      "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones\", \"titleSlug\": \"max-consecutive-ones\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximize the Confusion of an Exam\", \"titleSlug\": \"maximize-the-confusion-of-an-exam\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Recolors to Get K Consecutive Black Blocks\", \"titleSlug\": \"minimum-recolors-to-get-k-consecutive-black-blocks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Nice Subarray\", \"titleSlug\": \"longest-nice-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of Distinct Subarrays With Length K\", \"titleSlug\": \"maximum-sum-of-distinct-subarrays-with-length-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Enemy Forts That Can Be Captured\", \"titleSlug\": \"maximum-enemy-forts-that-can-be-captured\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        }
      ],
      "stats": "{\"totalAccepted\": \"423.2K\", \"totalSubmission\": \"675.3K\", \"totalAcceptedRaw\": 423227, \"totalSubmissionRaw\": 675272, \"acRate\": \"62.7%\"}",
      "hints": [
        "One thing's for sure, we will only flip a zero if it extends an existing window of 1s. Otherwise, there's no point in doing it, right? Think Sliding Window!",
        "Since we know this problem can be solved using the sliding window construct, we might as well focus in that direction for hints. Basically, in a given window, we can never have > K zeros, right?",
        "We don't have a fixed size window in this case. The window size can grow and shrink depending upon the number of zeros we have (we don't actually have to flip the zeros here!).",
        "The way to shrink or expand a window would be based on the number of zeros that can still be flipped and so on."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
        "title": "Longest Substring with At Most K Distinct Characters",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-repeating-character-replacement",
        "title": "Longest Repeating Character Replacement",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "max-consecutive-ones",
        "title": "Max Consecutive Ones",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "max-consecutive-ones-ii",
        "title": "Max Consecutive Ones II",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximize-the-confusion-of-an-exam",
        "title": "Maximize the Confusion of an Exam",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "minimum-recolors-to-get-k-consecutive-black-blocks",
        "title": "Minimum Recolors to Get K Consecutive Black Blocks",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-nice-subarray",
        "title": "Longest Nice Subarray",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
        "title": "Maximum Sum of Distinct Subarrays With Length K",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "maximum-enemy-forts-that-can-be-captured",
        "title": "Maximum Enemy Forts That Can Be Captured",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "One thing's for sure, we will only flip a zero if it extends an existing window of 1s. Otherwise, there's no point in doing it, right? Think Sliding Window!",
      "Since we know this problem can be solved using the sliding window construct, we might as well focus in that direction for hints. Basically, in a given window, we can never have > K zeros, right?",
      "We don't have a fixed size window in this case. The window size can grow and shrink depending upon the number of zeros we have (we don't actually have to flip the zeros here!).",
      "The way to shrink or expand a window would be based on the number of zeros that can still be flipped and so on."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ]
  }
}