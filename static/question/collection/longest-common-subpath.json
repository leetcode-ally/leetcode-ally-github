{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1923",
      "title": "Longest Common Subpath",
      "titleSlug": "longest-common-subpath",
      "content": "<p>There is a country of <code>n</code> cities numbered from <code>0</code> to <code>n - 1</code>. In this country, there is a road connecting <b>every pair</b> of cities.</p>\n\n<p>There are <code>m</code> friends numbered from <code>0</code> to <code>m - 1</code> who are traveling through the country. Each one of them will take a path consisting of some cities. Each path is represented by an integer array that contains the visited cities in order. The path may contain a city <strong>more than once</strong>, but the same city will not be listed consecutively.</p>\n\n<p>Given an integer <code>n</code> and a 2D integer array <code>paths</code> where <code>paths[i]</code> is an integer array representing the path of the <code>i<sup>th</sup></code> friend, return <em>the length of the <strong>longest common subpath</strong> that is shared by <strong>every</strong> friend&#39;s path, or </em><code>0</code><em> if there is no common subpath at all</em>.</p>\n\n<p>A <strong>subpath</strong> of a path is a contiguous sequence of cities within that path.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, paths = [[0,1,<u>2,3</u>,4],\n                       [<u>2,3</u>,4],\n                       [4,0,1,<u>2,3</u>]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest common subpath is [2,3].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, paths = [[0],[1],[2]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no common subpath shared by the three paths.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, paths = [[<u>0</u>,1,2,3,4],\n                       [4,3,2,1,<u>0</u>]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The possible longest common subpaths are [0], [1], [2], [3], and [4]. All have a length of 1.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>m == paths.length</code></li>\n\t<li><code>2 &lt;= m &lt;= 10<sup>5</sup></code></li>\n\t<li><code>sum(paths[i].length) &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= paths[i][j] &lt; n</code></li>\n\t<li>The same city is not listed multiple times consecutively in <code>paths[i]</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 460,
      "dislikes": 35,
      "similarQuestions": "[{\"title\": \"Reconstruct Itinerary\", \"titleSlug\": \"reconstruct-itinerary\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Repeated Subarray\", \"titleSlug\": \"maximum-length-of-repeated-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Rolling Hash",
          "slug": "rolling-hash"
        },
        {
          "name": "Suffix Array",
          "slug": "suffix-array"
        },
        {
          "name": "Hash Function",
          "slug": "hash-function"
        }
      ],
      "stats": "{\"totalAccepted\": \"6.8K\", \"totalSubmission\": \"24.6K\", \"totalAcceptedRaw\": 6808, \"totalSubmissionRaw\": 24603, \"acRate\": \"27.7%\"}",
      "hints": [
        "If there is a common path with length x, there is for sure a common path of length y where y < x.",
        "We can use binary search over the answer with the range [0, min(path[i].length)].",
        "Using binary search, we want to verify if we have a common path of length m. We can achieve this using hashing."
      ]
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "reconstruct-itinerary",
        "title": "Reconstruct Itinerary",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-length-of-repeated-subarray",
        "title": "Maximum Length of Repeated Subarray",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "If there is a common path with length x, there is for sure a common path of length y where y < x.",
      "We can use binary search over the answer with the range [0, min(path[i].length)].",
      "Using binary search, we want to verify if we have a common path of length m. We can achieve this using hashing."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ]
  }
}