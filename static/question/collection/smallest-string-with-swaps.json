{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1202",
      "title": "Smallest String With Swaps",
      "titleSlug": "smallest-string-with-swaps",
      "content": "<p>You are given a string <code>s</code>, and an array of pairs of indices in the string&nbsp;<code>pairs</code>&nbsp;where&nbsp;<code>pairs[i] =&nbsp;[a, b]</code>&nbsp;indicates 2 indices(0-indexed) of the string.</p>\n\n<p>You can&nbsp;swap the characters at any pair of indices in the given&nbsp;<code>pairs</code>&nbsp;<strong>any number of times</strong>.</p>\n\n<p>Return the&nbsp;lexicographically smallest string that <code>s</code>&nbsp;can be changed to after using the swaps.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;dcab&quot;, pairs = [[0,3],[1,2]]\n<strong>Output:</strong> &quot;bacd&quot;\n<strong>Explaination:</strong> \nSwap s[0] and s[3], s = &quot;bcad&quot;\nSwap s[1] and s[2], s = &quot;bacd&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;dcab&quot;, pairs = [[0,3],[1,2],[0,2]]\n<strong>Output:</strong> &quot;abcd&quot;\n<strong>Explaination: </strong>\nSwap s[0] and s[3], s = &quot;bcad&quot;\nSwap s[0] and s[2], s = &quot;acbd&quot;\nSwap s[1] and s[2], s = &quot;abcd&quot;</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cba&quot;, pairs = [[0,1],[1,2]]\n<strong>Output:</strong> &quot;abc&quot;\n<strong>Explaination: </strong>\nSwap s[0] and s[1], s = &quot;bca&quot;\nSwap s[1] and s[2], s = &quot;bac&quot;\nSwap s[0] and s[1], s = &quot;abc&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= pairs.length &lt;= 10^5</code></li>\n\t<li><code>0 &lt;= pairs[i][0], pairs[i][1] &lt;&nbsp;s.length</code></li>\n\t<li><code>s</code>&nbsp;only contains lower case English letters.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 3595,
      "dislikes": 134,
      "similarQuestions": "[{\"title\": \"Minimize Hamming Distance After Swap Operations\", \"titleSlug\": \"minimize-hamming-distance-after-swap-operations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Process Restricted Friend Requests\", \"titleSlug\": \"process-restricted-friend-requests\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Largest Number After Digit Swaps by Parity\", \"titleSlug\": \"largest-number-after-digit-swaps-by-parity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Lexicographically Smallest Beautiful String\", \"titleSlug\": \"lexicographically-smallest-beautiful-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Make Lexicographically Smallest Array by Swapping Elements\", \"titleSlug\": \"make-lexicographically-smallest-array-by-swapping-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Union Find",
          "slug": "union-find"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        }
      ],
      "stats": "{\"totalAccepted\": \"109.3K\", \"totalSubmission\": \"188.1K\", \"totalAcceptedRaw\": 109260, \"totalSubmissionRaw\": 188111, \"acRate\": \"58.1%\"}",
      "hints": [
        "Think of it as a graph problem.",
        "Consider the pairs as connected nodes in the graph, what can you do with a connected component of indices ?",
        "We can sort each connected component alone to get the lexicographically minimum string."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "minimize-hamming-distance-after-swap-operations",
        "title": "Minimize Hamming Distance After Swap Operations",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "process-restricted-friend-requests",
        "title": "Process Restricted Friend Requests",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "largest-number-after-digit-swaps-by-parity",
        "title": "Largest Number After Digit Swaps by Parity",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "lexicographically-smallest-beautiful-string",
        "title": "Lexicographically Smallest Beautiful String",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "make-lexicographically-smallest-array-by-swapping-elements",
        "title": "Make Lexicographically Smallest Array by Swapping Elements",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Think of it as a graph problem.",
      "Consider the pairs as connected nodes in the graph, what can you do with a connected component of indices ?",
      "We can sort each connected component alone to get the lexicographically minimum string."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ]
  }
}