{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1855",
      "title": "Maximum Distance Between a Pair of Values",
      "titleSlug": "maximum-distance-between-a-pair-of-values",
      "content": "<p>You are given two <strong>non-increasing 0-indexed </strong>integer arrays <code>nums1</code>​​​​​​ and <code>nums2</code>​​​​​​.</p>\n\n<p>A pair of indices <code>(i, j)</code>, where <code>0 &lt;= i &lt; nums1.length</code> and <code>0 &lt;= j &lt; nums2.length</code>, is <strong>valid</strong> if both <code>i &lt;= j</code> and <code>nums1[i] &lt;= nums2[j]</code>. The <strong>distance</strong> of the pair is <code>j - i</code>​​​​.</p>\n\n<p>Return <em>the <strong>maximum distance</strong> of any <strong>valid</strong> pair </em><code>(i, j)</code><em>. If there are no valid pairs, return </em><code>0</code>.</p>\n\n<p>An array <code>arr</code> is <strong>non-increasing</strong> if <code>arr[i-1] &gt;= arr[i]</code> for every <code>1 &lt;= i &lt; arr.length</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [55,30,5,4,2], nums2 = [100,20,10,10,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The valid pairs are (0,0), (2,2), (2,3), (2,4), (3,3), (3,4), and (4,4).\nThe maximum distance is 2 with pair (2,4).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,2,2], nums2 = [10,10,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The valid pairs are (0,0), (0,1), and (1,1).\nThe maximum distance is 1 with pair (0,1).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [30,29,19,5], nums2 = [25,25,25,25,25]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The valid pairs are (2,2), (2,3), (2,4), (3,3), and (3,4).\nThe maximum distance is 2 with pair (2,4).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[j] &lt;= 10<sup>5</sup></code></li>\n\t<li>Both <code>nums1</code> and <code>nums2</code> are <strong>non-increasing</strong>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 1161,
      "dislikes": 28,
      "similarQuestions": "[{\"title\": \"Two Furthest Houses With Different Colors\", \"titleSlug\": \"two-furthest-houses-with-different-colors\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "stats": "{\"totalAccepted\": \"46.7K\", \"totalSubmission\": \"87.5K\", \"totalAcceptedRaw\": 46721, \"totalSubmissionRaw\": 87451, \"acRate\": \"53.4%\"}",
      "hints": [
        "Since both arrays are sorted in a non-increasing way this means that for each value in the first array. We can find the farthest value smaller than it using binary search.",
        "There is another solution using a two pointers approach since the first array is non-increasing the farthest j such that nums2[j] ≥ nums1[i] is at least as far as the farthest j such that nums2[j] ≥ nums1[i-1]"
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "two-furthest-houses-with-different-colors",
        "title": "Two Furthest Houses With Different Colors",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Since both arrays are sorted in a non-increasing way this means that for each value in the first array. We can find the farthest value smaller than it using binary search.",
      "There is another solution using a two pointers approach since the first array is non-increasing the farthest j such that nums2[j] ≥ nums1[i] is at least as far as the farthest j such that nums2[j] ≥ nums1[i-1]"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ]
  }
}