{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1872",
      "title": "Stone Game VIII",
      "titleSlug": "stone-game-viii",
      "content": "<p>Alice and Bob take turns playing a game, with <strong>Alice starting first</strong>.</p>\r\n\r\n<p>There are <code>n</code> stones arranged in a row. On each player&#39;s turn, while the number of stones is <strong>more than one</strong>, they will do the following:</p>\r\n\r\n<ol>\r\n\t<li>Choose an integer <code>x &gt; 1</code>, and <strong>remove</strong> the leftmost <code>x</code> stones from the row.</li>\r\n\t<li>Add the <strong>sum</strong> of the <strong>removed</strong> stones&#39; values to the player&#39;s score.</li>\r\n\t<li>Place a <strong>new stone</strong>, whose value is equal to that sum, on the left side of the row.</li>\r\n</ol>\r\n\r\n<p>The game stops when <strong>only</strong> <strong>one</strong> stone is left in the row.</p>\r\n\r\n<p>The <strong>score difference</strong> between Alice and Bob is <code>(Alice&#39;s score - Bob&#39;s score)</code>. Alice&#39;s goal is to <strong>maximize</strong> the score difference, and Bob&#39;s goal is the <strong>minimize</strong> the score difference.</p>\r\n\r\n<p>Given an integer array <code>stones</code> of length <code>n</code> where <code>stones[i]</code> represents the value of the <code>i<sup>th</sup></code> stone <strong>from the left</strong>, return <em>the <strong>score difference</strong> between Alice and Bob if they both play <strong>optimally</strong>.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> stones = [-1,2,-3,4,-5]\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong>\r\n- Alice removes the first 4 stones, adds (-1) + 2 + (-3) + 4 = 2 to her score, and places a stone of\r\n  value 2 on the left. stones = [2,-5].\r\n- Bob removes the first 2 stones, adds 2 + (-5) = -3 to his score, and places a stone of value -3 on\r\n  the left. stones = [-3].\r\nThe difference between their scores is 2 - (-3) = 5.\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> stones = [7,-6,5,10,5,-2,-6]\r\n<strong>Output:</strong> 13\r\n<strong>Explanation:</strong>\r\n- Alice removes all stones, adds 7 + (-6) + 5 + 10 + 5 + (-2) + (-6) = 13 to her score, and places a\r\n  stone of value 13 on the left. stones = [13].\r\nThe difference between their scores is 13 - 0 = 13.\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> stones = [-10,-12]\r\n<strong>Output:</strong> -22\r\n<strong>Explanation:</strong>\r\n- Alice can only make one move, which is to remove both stones. She adds (-10) + (-12) = -22 to her\r\n  score and places a stone of value -22 on the left. stones = [-22].\r\nThe difference between their scores is (-22) - 0 = -22.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == stones.length</code></li>\r\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\r\n\t<li><code>-10<sup>4</sup> &lt;= stones[i] &lt;= 10<sup>4</sup></code></li>\r\n</ul>",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 435,
      "dislikes": 23,
      "similarQuestions": "[{\"title\": \"Stone Game\", \"titleSlug\": \"stone-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game II\", \"titleSlug\": \"stone-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game III\", \"titleSlug\": \"stone-game-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IV\", \"titleSlug\": \"stone-game-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game V\", \"titleSlug\": \"stone-game-v\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game VI\", \"titleSlug\": \"stone-game-vi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VII\", \"titleSlug\": \"stone-game-vii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Stone Game VIII\", \"titleSlug\": \"stone-game-viii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Stone Game IX\", \"titleSlug\": \"stone-game-ix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Prefix Sum",
          "slug": "prefix-sum"
        },
        {
          "name": "Game Theory",
          "slug": "game-theory"
        }
      ],
      "stats": "{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"16.6K\", \"totalAcceptedRaw\": 8796, \"totalSubmissionRaw\": 16650, \"acRate\": \"52.8%\"}",
      "hints": [
        "Let's note that the only thing that matters is how many stones were removed so we can maintain dp[numberOfRemovedStones]",
        "dp[x] = max(sum of all elements up to y - dp[y]) for all y > x"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game",
        "title": "Stone Game",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-ii",
        "title": "Stone Game II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-iii",
        "title": "Stone Game III",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-iv",
        "title": "Stone Game IV",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-v",
        "title": "Stone Game V",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-vi",
        "title": "Stone Game VI",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-vii",
        "title": "Stone Game VII",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "stone-game-viii",
        "title": "Stone Game VIII",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "stone-game-ix",
        "title": "Stone Game IX",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Let's note that the only thing that matters is how many stones were removed so we can maintain dp[numberOfRemovedStones]",
      "dp[x] = max(sum of all elements up to y - dp[y]) for all y > x"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ]
  }
}