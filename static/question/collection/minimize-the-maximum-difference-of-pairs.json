{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2616",
      "title": "Minimize the Maximum Difference of Pairs",
      "titleSlug": "minimize-the-maximum-difference-of-pairs",
      "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> and an integer <code>p</code>. Find <code>p</code> pairs of indices of <code>nums</code> such that the <strong>maximum</strong> difference amongst all the pairs is <strong>minimized</strong>. Also, ensure no index appears more than once amongst the <code>p</code> pairs.</p>\n\n<p>Note that for a pair of elements at the index <code>i</code> and <code>j</code>, the difference of this pair is <code>|nums[i] - nums[j]|</code>, where <code>|x|</code> represents the <strong>absolute</strong> <strong>value</strong> of <code>x</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> <strong>maximum</strong> difference among all </em><code>p</code> <em>pairs.</em> We define the maximum of an empty set to be zero.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,1,2,7,1,3], p = 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The first pair is formed from the indices 1 and 4, and the second pair is formed from the indices 2 and 5. \nThe maximum difference is max(|nums[1] - nums[4]|, |nums[2] - nums[5]|) = max(0, 1) = 1. Therefore, we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,1,2], p = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Let the indices 1 and 3 form a pair. The difference of that pair is |2 - 2| = 0, which is the minimum we can attain.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= p &lt;= (nums.length)/2</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 2202,
      "dislikes": 224,
      "similarQuestions": "[{\"title\": \"Minimum Absolute Difference\", \"titleSlug\": \"minimum-absolute-difference\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Difference Between Largest and Smallest Value in Three Moves\", \"titleSlug\": \"minimum-difference-between-largest-and-smallest-value-in-three-moves\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "stats": "{\"totalAccepted\": \"66.5K\", \"totalSubmission\": \"150.7K\", \"totalAcceptedRaw\": 66457, \"totalSubmissionRaw\": 150664, \"acRate\": \"44.1%\"}",
      "hints": [
        "Can we use dynamic programming here?",
        "To minimize the answer, the array should be sorted first.",
        "The recurrence relation is fn(i, x) = min(fn(i+1, x), max(abs(nums[i]-nums[i+1]), fn(i+2, p-1)), and fn(0,p) gives the desired answer."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "minimum-absolute-difference",
        "title": "Minimum Absolute Difference",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
        "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Can we use dynamic programming here?",
      "To minimize the answer, the array should be sorted first.",
      "The recurrence relation is fn(i, x) = min(fn(i+1, x), max(abs(nums[i]-nums[i+1]), fn(i+2, p-1)), and fn(0,p) gives the desired answer."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ]
  }
}