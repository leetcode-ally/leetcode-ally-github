{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2645",
      "title": "Minimum Additions to Make Valid String",
      "titleSlug": "minimum-additions-to-make-valid-string",
      "content": "<p>Given a string <code>word</code> to which you can insert letters &quot;a&quot;, &quot;b&quot; or &quot;c&quot; anywhere and any number of times, return <em>the minimum number of letters that must be inserted so that <code>word</code> becomes <strong>valid</strong>.</em></p>\n\n<p>A string is called <strong>valid </strong>if it can be formed by concatenating the string &quot;abc&quot; several times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;b&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Insert the letter &quot;a&quot; right before &quot;b&quot;, and the letter &quot;c&quot; right next to &quot;a&quot; to obtain the valid string &quot;<strong>a</strong>b<strong>c</strong>&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;aaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Insert letters &quot;b&quot; and &quot;c&quot; next to each &quot;a&quot; to obtain the valid string &quot;a<strong>bc</strong>a<strong>bc</strong>a<strong>bc</strong>&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;abc&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> word is already valid. No modifications are needed. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 50</code></li>\n\t<li><code>word</code> consists of letters &quot;a&quot;, &quot;b&quot;&nbsp;and &quot;c&quot; only.&nbsp;</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 500,
      "dislikes": 20,
      "similarQuestions": "[{\"title\": \"Merge Strings Alternately\", \"titleSlug\": \"merge-strings-alternately\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Greedy",
          "slug": "greedy"
        }
      ],
      "stats": "{\"totalAccepted\": \"24.6K\", \"totalSubmission\": \"49.7K\", \"totalAcceptedRaw\": 24641, \"totalSubmissionRaw\": 49687, \"acRate\": \"49.6%\"}",
      "hints": [
        "Maintain a pointer on word and another pointer on string “abc”.",
        "If the two characters that are being pointed to differ, Increment the answer and the pointer to the string “abc” by one."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "merge-strings-alternately",
        "title": "Merge Strings Alternately",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Maintain a pointer on word and another pointer on string “abc”.",
      "If the two characters that are being pointed to differ, Increment the answer and the pointer to the string “abc” by one."
    ],
    "relatedTopics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ]
  }
}