{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3259",
            "title": "Maximum Energy Boost From Two Drinks",
            "titleSlug": "maximum-energy-boost-from-two-drinks",
            "content": "<p>You are given two integer arrays <code>energyDrinkA</code> and <code>energyDrinkB</code> of the same length <code>n</code> by a futuristic sports scientist. These arrays represent the energy boosts per hour provided by two different energy drinks, A and B, respectively.</p>\n\n<p>You want to <em>maximize</em> your total energy boost by drinking one energy drink <em>per hour</em>. However, if you want to switch from consuming one energy drink to the other, you need to wait for <em>one hour</em> to cleanse your system (meaning you won&#39;t get any energy boost in that hour).</p>\n\n<p>Return the <strong>maximum</strong> total energy boost you can gain in the next <code>n</code> hours.</p>\n\n<p><strong>Note</strong> that you can start consuming <em>either</em> of the two energy drinks.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> energyDrinkA<span class=\"example-io\"> = [1,3,1], </span>energyDrinkB<span class=\"example-io\"> = [3,1,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>To gain an energy boost of 5, drink only the energy drink A (or only B).</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> energyDrinkA<span class=\"example-io\"> = [4,1,1], </span>energyDrinkB<span class=\"example-io\"> = [1,1,3]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">7</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>To gain an energy boost of 7:</p>\n\n<ul>\n\t<li>Drink the energy drink A for the first hour.</li>\n\t<li>Switch to the energy drink B and we lose the energy boost of the second hour.</li>\n\t<li>Gain the energy boost of the drink B in the third hour.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == energyDrinkA.length == energyDrinkB.length</code></li>\n\t<li><code>3 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= energyDrinkA[i], energyDrinkB[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 137,
            "dislikes": 12,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "stats": "{\"totalAccepted\": \"29.7K\", \"totalSubmission\": \"60.8K\", \"totalAcceptedRaw\": 29716, \"totalSubmissionRaw\": 60754, \"acRate\": \"48.9%\"}",
            "hints": [
                "Can we solve it using dynamic programming?",
                "Define <code>dpA[i]</code> as the maximum energy boost if we consider only the first <code>i + 1</code> hours such that in the last hour, we drink the energy drink A.",
                "Similarly define <code>dpB[i]</code>.",
                "<code>dpA[i] = max(dpA[i - 1], dpB[i - 2]) + energyDrinkA[i]</code>",
                "Similarly, fill <code>dpB</code>.",
                "The answer is <code>max(dpA[n - 1], dpB[n - 1])</code>."
            ]
        },
        "similar": [],
        "hints": [
            "Can we solve it using dynamic programming?",
            "Define <code>dpA[i]</code> as the maximum energy boost if we consider only the first <code>i + 1</code> hours such that in the last hour, we drink the energy drink A.",
            "Similarly define <code>dpB[i]</code>.",
            "<code>dpA[i] = max(dpA[i - 1], dpB[i - 2]) + energyDrinkA[i]</code>",
            "Similarly, fill <code>dpB</code>.",
            "The answer is <code>max(dpA[n - 1], dpB[n - 1])</code>."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ]
    }
}