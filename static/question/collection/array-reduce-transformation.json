{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2626",
      "title": "Array Reduce Transformation",
      "titleSlug": "array-reduce-transformation",
      "content": "<p>Given an integer array <code>nums</code>, a reducer function <code>fn</code>, and an initial value <code>init</code>, return the final result obtained by executing the <code>fn</code> function on each element of the array, sequentially, passing in the return value from the calculation on the preceding element.</p>\n\n<p>This result is achieved through the following operations: <code>val = fn(init, nums[0]), val = fn(val, nums[1]), val = fn(val, nums[2]), ...</code> until every element in the array has been processed. The ultimate value of <code>val</code> is then returned.</p>\n\n<p>If the length of the array is 0, the function should return <code>init</code>.</p>\n\n<p>Please solve it without using the built-in <code>Array.reduce</code> method.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nnums = [1,2,3,4]\nfn = function sum(accum, curr) { return accum + curr; }\ninit = 0\n<strong>Output:</strong> 10\n<strong>Explanation:</strong>\ninitially, the value is init=0.\n(0) + nums[0] = 1\n(1) + nums[1] = 3\n(3) + nums[2] = 6\n(6) + nums[3] = 10\nThe final answer is 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nnums = [1,2,3,4]\nfn = function sum(accum, curr) { return accum + curr * curr; }\ninit = 100\n<strong>Output:</strong> 130\n<strong>Explanation:</strong>\ninitially, the value is init=100.\n(100) + nums[0] * nums[0] = 101\n(101) + nums[1] * nums[1] = 105\n(105) + nums[2] * nums[2] = 114\n(114) + nums[3] * nums[3] = 130\nThe final answer is 130.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nnums = []\nfn = function sum(accum, curr) { return 0; }\ninit = 25\n<strong>Output:</strong> 25\n<strong>Explanation:</strong> For empty arrays, the answer is always init.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= init &lt;= 1000</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 493,
      "dislikes": 24,
      "similarQuestions": "[{\"title\": \"Group By\", \"titleSlug\": \"group-by\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Filter Elements from Array\", \"titleSlug\": \"filter-elements-from-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Apply Transform Over Each Element in Array\", \"titleSlug\": \"apply-transform-over-each-element-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [],
      "stats": "{\"totalAccepted\": \"88.7K\", \"totalSubmission\": \"106.6K\", \"totalAcceptedRaw\": 88705, \"totalSubmissionRaw\": 106603, \"acRate\": \"83.2%\"}",
      "hints": [
        "Declare a variable \"res\" and set it it equal to the initial value.",
        "Loop over each value in the array and set \"res\" = fn(res, arr[i])."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "group-by",
        "title": "Group By",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "filter-elements-from-array",
        "title": "Filter Elements from Array",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "title": "Apply Transform Over Each Element in Array",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Declare a variable \"res\" and set it it equal to the initial value.",
      "Loop over each value in the array and set \"res\" = fn(res, arr[i])."
    ],
    "relatedTopics": []
  }
}