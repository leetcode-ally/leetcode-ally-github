{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2260",
      "title": "Minimum Consecutive Cards to Pick Up",
      "titleSlug": "minimum-consecutive-cards-to-pick-up",
      "content": "<p>You are given an integer array <code>cards</code> where <code>cards[i]</code> represents the <strong>value</strong> of the <code>i<sup>th</sup></code> card. A pair of cards are <strong>matching</strong> if the cards have the <strong>same</strong> value.</p>\n\n<p>Return<em> the <strong>minimum</strong> number of <strong>consecutive</strong> cards you have to pick up to have a pair of <strong>matching</strong> cards among the picked cards.</em> If it is impossible to have matching cards, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> cards = [3,4,2,3,4,7]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> We can pick up the cards [3,4,2,3] which contain a matching pair of cards with value 3. Note that picking up the cards [4,2,3,4] is also optimal.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cards = [1,0,5,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no way to pick up a set of consecutive cards that contain a pair of matching cards.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= cards.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= cards[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 877,
      "dislikes": 28,
      "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sliding Window",
          "slug": "sliding-window"
        }
      ],
      "stats": "{\"totalAccepted\": \"58.1K\", \"totalSubmission\": \"114.5K\", \"totalAcceptedRaw\": 58123, \"totalSubmissionRaw\": 114468, \"acRate\": \"50.8%\"}",
      "hints": [
        "Iterate through the cards and store the location of the last occurrence of each number.",
        "What data structure could you use to get the last occurrence of a number in O(1) or O(log n)?"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-substring-without-repeating-characters",
        "title": "Longest Substring Without Repeating Characters",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Iterate through the cards and store the location of the last occurrence of each number.",
      "What data structure could you use to get the last occurrence of a number in O(1) or O(log n)?"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ]
  }
}