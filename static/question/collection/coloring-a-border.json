{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1034",
      "title": "Coloring A Border",
      "titleSlug": "coloring-a-border",
      "content": "<p>You are given an <code>m x n</code> integer matrix <code>grid</code>, and three integers <code>row</code>, <code>col</code>, and <code>color</code>. Each value in the grid represents the color of the grid square at that location.</p>\n\n<p>Two squares are called <strong>adjacent</strong> if they are next to each other in any of the 4 directions.</p>\n\n<p>Two squares belong to the same <strong>connected component</strong> if they have the same color and they are adjacent.</p>\n\n<p>The <strong>border of a connected component</strong> is all the squares in the connected component that are either adjacent to (at least) a square not in the component, or on the boundary of the grid (the first or last row or column).</p>\n\n<p>You should color the <strong>border</strong> of the <strong>connected component</strong> that contains the square <code>grid[row][col]</code> with <code>color</code>.</p>\n\n<p>Return <em>the final grid</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> grid = [[1,1],[1,2]], row = 0, col = 0, color = 3\n<strong>Output:</strong> [[3,3],[3,2]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> grid = [[1,2,2],[2,3,2]], row = 0, col = 1, color = 3\n<strong>Output:</strong> [[1,3,3],[2,3,3]]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> grid = [[1,1,1],[1,1,1],[1,1,1]], row = 1, col = 1, color = 2\n<strong>Output:</strong> [[2,2,2],[2,1,2],[2,2,2]]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j], color &lt;= 1000</code></li>\n\t<li><code>0 &lt;= row &lt; m</code></li>\n\t<li><code>0 &lt;= col &lt; n</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 683,
      "dislikes": 856,
      "similarQuestions": "[{\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "stats": "{\"totalAccepted\": \"32.7K\", \"totalSubmission\": \"66.7K\", \"totalAcceptedRaw\": 32665, \"totalSubmissionRaw\": 66676, \"acRate\": \"49.0%\"}",
      "hints": [
        "Use a DFS to find every square in the component.  Then for each square, color it if it has a neighbor that is outside the grid or a different color."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "island-perimeter",
        "title": "Island Perimeter",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Use a DFS to find every square in the component.  Then for each square, color it if it has a neighbor that is outside the grid or a different color."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ]
  }
}