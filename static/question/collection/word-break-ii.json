{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "140",
      "title": "Word Break II",
      "titleSlug": "word-break-ii",
      "content": "<p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, add spaces in <code>s</code> to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in <strong>any order</strong>.</p>\n\n<p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsanddog&quot;, wordDict = [&quot;cat&quot;,&quot;cats&quot;,&quot;and&quot;,&quot;sand&quot;,&quot;dog&quot;]\n<strong>Output:</strong> [&quot;cats and dog&quot;,&quot;cat sand dog&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pineapplepenapple&quot;, wordDict = [&quot;apple&quot;,&quot;pen&quot;,&quot;applepen&quot;,&quot;pine&quot;,&quot;pineapple&quot;]\n<strong>Output:</strong> [&quot;pine apple pen apple&quot;,&quot;pineapple pen apple&quot;,&quot;pine applepen apple&quot;]\n<strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= wordDict.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= wordDict[i].length &lt;= 10</code></li>\n\t<li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li>\n\t<li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li>\n\t<li>Input is generated in a way that the length of the answer doesn&#39;t exceed&nbsp;10<sup>5</sup>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 6599,
      "dislikes": 521,
      "similarQuestions": "[{\"title\": \"Word Break\", \"titleSlug\": \"word-break\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Concatenated Words\", \"titleSlug\": \"concatenated-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Trie",
          "slug": "trie"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        }
      ],
      "stats": "{\"totalAccepted\": \"552.7K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 552685, \"totalSubmissionRaw\": 1176080, \"acRate\": \"47.0%\"}",
      "hints": []
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "word-break",
        "title": "Word Break",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "concatenated-words",
        "title": "Concatenated Words",
        "isPaidOnly": false
      }
    ],
    "hints": [],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ]
  }
}