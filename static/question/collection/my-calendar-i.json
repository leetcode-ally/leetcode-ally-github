{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "729",
      "title": "My Calendar I",
      "titleSlug": "my-calendar-i",
      "content": "<p>You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a <strong>double booking</strong>.</p>\n\n<p>A <strong>double booking</strong> happens when two events have some non-empty intersection (i.e., some moment is common to both events.).</p>\n\n<p>The event can be represented as a pair of integers <code>start</code> and <code>end</code> that represents a booking on the half-open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\n\n<p>Implement the <code>MyCalendar</code> class:</p>\n\n<ul>\n\t<li><code>MyCalendar()</code> Initializes the calendar object.</li>\n\t<li><code>boolean book(int start, int end)</code> Returns <code>true</code> if the event can be added to the calendar successfully without causing a <strong>double booking</strong>. Otherwise, return <code>false</code> and do not add the event to the calendar.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyCalendar&quot;, &quot;book&quot;, &quot;book&quot;, &quot;book&quot;]\n[[], [10, 20], [15, 25], [20, 30]]\n<strong>Output</strong>\n[null, true, false, true]\n\n<strong>Explanation</strong>\nMyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.\nmyCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= start &lt; end &lt;= 10<sup>9</sup></code></li>\n\t<li>At most <code>1000</code> calls will be made to <code>book</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 4108,
      "dislikes": 106,
      "similarQuestions": "[{\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Determine if Two Events Have Conflict\", \"titleSlug\": \"determine-if-two-events-have-conflict\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        },
        {
          "name": "Ordered Set",
          "slug": "ordered-set"
        }
      ],
      "stats": "{\"totalAccepted\": \"270.6K\", \"totalSubmission\": \"478.3K\", \"totalAcceptedRaw\": 270595, \"totalSubmissionRaw\": 478337, \"acRate\": \"56.6%\"}",
      "hints": [
        "Store the events as a sorted list of intervals.  If none of the events conflict, then the new event can be added."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "my-calendar-ii",
        "title": "My Calendar II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "my-calendar-iii",
        "title": "My Calendar III",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "determine-if-two-events-have-conflict",
        "title": "Determine if Two Events Have Conflict",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Store the events as a sorted list of intervals.  If none of the events conflict, then the new event can be added."
    ],
    "relatedTopics": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ]
  }
}