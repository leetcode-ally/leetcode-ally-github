{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "473",
      "title": "Matchsticks to Square",
      "titleSlug": "matchsticks-to-square",
      "content": "<p>You are given an integer array <code>matchsticks</code> where <code>matchsticks[i]</code> is the length of the <code>i<sup>th</sup></code> matchstick. You want to use <strong>all the matchsticks</strong> to make one square. You <strong>should not break</strong> any stick, but you can link them up, and each matchstick must be used <strong>exactly one time</strong>.</p>\n\n<p>Return <code>true</code> if you can make this square and <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/09/matchsticks1-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> matchsticks = [1,1,2,2,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can form a square with length 2, one side of the square came two sticks with length 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> matchsticks = [3,3,3,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You cannot find a way to form a square with all the matchsticks.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= matchsticks.length &lt;= 15</code></li>\n\t<li><code>1 &lt;= matchsticks[i] &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 3720,
      "dislikes": 284,
      "similarQuestions": "[{\"title\": \"Maximum Rows Covered by Columns\", \"titleSlug\": \"maximum-rows-covered-by-columns\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Backtracking",
          "slug": "backtracking"
        },
        {
          "name": "Bit Manipulation",
          "slug": "bit-manipulation"
        },
        {
          "name": "Bitmask",
          "slug": "bitmask"
        }
      ],
      "stats": "{\"totalAccepted\": \"155.7K\", \"totalSubmission\": \"387.4K\", \"totalAcceptedRaw\": 155655, \"totalSubmissionRaw\": 387357, \"acRate\": \"40.2%\"}",
      "hints": [
        "Treat the matchsticks as an array. Can we split the array into 4 equal parts?",
        "Every matchstick can belong to either of the 4 sides. We don't know which one. Maybe try out all options!",
        "For every matchstick, we have to try out each of the 4 options i.e. which side it can belong to. We can make use of recursion for this.",
        "We don't really need to keep track of which matchsticks belong to a particular side during recursion. We just need to keep track of the <b>length</b> of each of the 4 sides.",
        "When all matchsticks have been used we simply need to see the length of all 4 sides. If they're equal, we have a square on our hands!"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-rows-covered-by-columns",
        "title": "Maximum Rows Covered by Columns",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Treat the matchsticks as an array. Can we split the array into 4 equal parts?",
      "Every matchstick can belong to either of the 4 sides. We don't know which one. Maybe try out all options!",
      "For every matchstick, we have to try out each of the 4 options i.e. which side it can belong to. We can make use of recursion for this.",
      "We don't really need to keep track of which matchsticks belong to a particular side during recursion. We just need to keep track of the <b>length</b> of each of the 4 sides.",
      "When all matchsticks have been used we simply need to see the length of all 4 sides. If they're equal, we have a square on our hands!"
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ]
  }
}