{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1455",
      "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
      "titleSlug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
      "content": "<p>Given a <code>sentence</code> that consists of some words separated by a <strong>single space</strong>, and a <code>searchWord</code>, check if <code>searchWord</code> is a prefix of any word in <code>sentence</code>.</p>\n\n<p>Return <em>the index of the word in </em><code>sentence</code><em> (<strong>1-indexed</strong>) where </em><code>searchWord</code><em> is a prefix of this word</em>. If <code>searchWord</code> is a prefix of more than one word, return the index of the first word <strong>(minimum index)</strong>. If there is no such word return <code>-1</code>.</p>\n\n<p>A <strong>prefix</strong> of a string <code>s</code> is any leading contiguous substring of <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;i love eating burger&quot;, searchWord = &quot;burg&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> &quot;burg&quot; is prefix of &quot;burger&quot; which is the 4th word in the sentence.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;this problem is an easy problem&quot;, searchWord = &quot;pro&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;pro&quot; is prefix of &quot;problem&quot; which is the 2nd and the 6th word in the sentence, but we return 2 as it&#39;s the minimal index.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;i am tired&quot;, searchWord = &quot;you&quot;\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> &quot;you&quot; is not a prefix of any word in the sentence.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= searchWord.length &lt;= 10</code></li>\n\t<li><code>sentence</code> consists of lowercase English letters and spaces.</li>\n\t<li><code>searchWord</code> consists of lowercase English letters.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 803,
      "dislikes": 40,
      "similarQuestions": "[{\"title\": \"Counting Words With a Given Prefix\", \"titleSlug\": \"counting-words-with-a-given-prefix\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Prefixes of a Given String\", \"titleSlug\": \"count-prefixes-of-a-given-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "String Matching",
          "slug": "string-matching"
        }
      ],
      "stats": "{\"totalAccepted\": \"72.8K\", \"totalSubmission\": \"113.6K\", \"totalAcceptedRaw\": 72826, \"totalSubmissionRaw\": 113568, \"acRate\": \"64.1%\"}",
      "hints": [
        "First extract the words of the sentence.",
        "Check for each word if searchWord occurs at index 0, if so return the index of this word (1-indexed)",
        "If searchWord doesn't exist as a prefix of any word return the default value (-1)."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "counting-words-with-a-given-prefix",
        "title": "Counting Words With a Given Prefix",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "count-prefixes-of-a-given-string",
        "title": "Count Prefixes of a Given String",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "First extract the words of the sentence.",
      "Check for each word if searchWord occurs at index 0, if so return the index of this word (1-indexed)",
      "If searchWord doesn't exist as a prefix of any word return the default value (-1)."
    ],
    "relatedTopics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ]
  }
}