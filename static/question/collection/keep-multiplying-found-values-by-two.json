{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2154",
      "title": "Keep Multiplying Found Values by Two",
      "titleSlug": "keep-multiplying-found-values-by-two",
      "content": "<p>You are given an array of integers <code>nums</code>. You are also given an integer <code>original</code> which is the first number that needs to be searched for in <code>nums</code>.</p>\n\n<p>You then do the following steps:</p>\n\n<ol>\n\t<li>If <code>original</code> is found in <code>nums</code>, <strong>multiply</strong> it by two (i.e., set <code>original = 2 * original</code>).</li>\n\t<li>Otherwise, <strong>stop</strong> the process.</li>\n\t<li><strong>Repeat</strong> this process with the new number as long as you keep finding the number.</li>\n</ol>\n\n<p>Return <em>the <strong>final</strong> value of </em><code>original</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,3,6,1,12], original = 3\n<strong>Output:</strong> 24\n<strong>Explanation:</strong> \n- 3 is found in nums. 3 is multiplied by 2 to obtain 6.\n- 6 is found in nums. 6 is multiplied by 2 to obtain 12.\n- 12 is found in nums. 12 is multiplied by 2 to obtain 24.\n- 24 is not found in nums. Thus, 24 is returned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,7,9], original = 4\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\n- 4 is not found in nums. Thus, 4 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i], original &lt;= 1000</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 672,
      "dislikes": 33,
      "similarQuestions": "[{\"title\": \"Largest Number At Least Twice of Others\", \"titleSlug\": \"largest-number-at-least-twice-of-others\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check If N and Its Double Exist\", \"titleSlug\": \"check-if-n-and-its-double-exist\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Sorting",
          "slug": "sorting"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "stats": "{\"totalAccepted\": \"81.9K\", \"totalSubmission\": \"114.4K\", \"totalAcceptedRaw\": 81927, \"totalSubmissionRaw\": 114429, \"acRate\": \"71.6%\"}",
      "hints": [
        "Repeatedly iterate through the array and check if the current value of original is in the array.",
        "If original is not found, stop and return its current value.",
        "Otherwise, multiply original by 2 and repeat the process.",
        "Use set data structure to check the existence faster."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "largest-number-at-least-twice-of-others",
        "title": "Largest Number At Least Twice of Others",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "check-if-n-and-its-double-exist",
        "title": "Check If N and Its Double Exist",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Repeatedly iterate through the array and check if the current value of original is in the array.",
      "If original is not found, stop and return its current value.",
      "Otherwise, multiply original by 2 and repeat the process.",
      "Use set data structure to check the existence faster."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ]
  }
}