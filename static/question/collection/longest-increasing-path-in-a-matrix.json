{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "329",
      "title": "Longest Increasing Path in a Matrix",
      "titleSlug": "longest-increasing-path-in-a-matrix",
      "content": "<p>Given an <code>m x n</code> integers <code>matrix</code>, return <em>the length of the longest increasing path in </em><code>matrix</code>.</p>\n\n<p>From each cell, you can either move in four directions: left, right, up, or down. You <strong>may not</strong> move <strong>diagonally</strong> or move <strong>outside the boundary</strong> (i.e., wrap-around is not allowed).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/05/grid1.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[9,9,4],[6,6,8],[2,1,1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest increasing path is <code>[1, 2, 6, 9]</code>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/27/tmp-grid.jpg\" style=\"width: 253px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[3,4,5],[3,2,6],[2,2,1]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> matrix = [[1]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 8710,
      "dislikes": 128,
      "similarQuestions": "[{\"title\": \"Number of Increasing Paths in a Grid\", \"titleSlug\": \"number-of-increasing-paths-in-a-grid\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        },
        {
          "name": "Memoization",
          "slug": "memoization"
        },
        {
          "name": "Matrix",
          "slug": "matrix"
        }
      ],
      "stats": "{\"totalAccepted\": \"491.5K\", \"totalSubmission\": \"924.5K\", \"totalAcceptedRaw\": 491532, \"totalSubmissionRaw\": 924504, \"acRate\": \"53.2%\"}",
      "hints": []
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "number-of-increasing-paths-in-a-grid",
        "title": "Number of Increasing Paths in a Grid",
        "isPaidOnly": false
      }
    ],
    "hints": [],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ]
  }
}