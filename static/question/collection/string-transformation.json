{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2851",
            "title": "String Transformation",
            "titleSlug": "string-transformation",
            "content": "<p>You are given two strings <code>s</code> and <code>t</code> of equal length <code>n</code>. You can perform the following operation on the string <code>s</code>:</p>\n\n<ul>\n\t<li>Remove a <strong>suffix</strong> of <code>s</code> of length <code>l</code> where <code>0 &lt; l &lt; n</code> and append it at the start of <code>s</code>.<br />\n\tFor example, let <code>s = &#39;abcd&#39;</code> then in one operation you can remove the suffix <code>&#39;cd&#39;</code> and append it in front of <code>s</code> making <code>s = &#39;cdab&#39;</code>.</li>\n</ul>\n\n<p>You are also given an integer <code>k</code>. Return <em>the number of ways in which </em><code>s</code> <em>can be transformed into </em><code>t</code><em> in <strong>exactly</strong> </em><code>k</code><em> operations.</em></p>\n\n<p>Since the answer can be large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;cdab&quot;, k = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nFirst way:\nIn first operation, choose suffix from index = 3, so resulting s = &quot;dabc&quot;.\nIn second operation, choose suffix from index = 3, so resulting s = &quot;cdab&quot;.\n\nSecond way:\nIn first operation, choose suffix from index = 1, so resulting s = &quot;bcda&quot;.\nIn second operation, choose suffix from index = 1, so resulting s = &quot;cdab&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababab&quot;, t = &quot;ababab&quot;, k = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nFirst way:\nChoose suffix from index = 2, so resulting s = &quot;ababab&quot;.\n\nSecond way:\nChoose suffix from index = 4, so resulting s = &quot;ababab&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>15</sup></code></li>\n\t<li><code>s.length == t.length</code></li>\n\t<li><code>s</code> and <code>t</code> consist of only lowercase English alphabets.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 161,
            "dislikes": 32,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "String Matching",
                    "slug": "string-matching"
                }
            ],
            "stats": "{\"totalAccepted\": \"3.6K\", \"totalSubmission\": \"12.5K\", \"totalAcceptedRaw\": 3650, \"totalSubmissionRaw\": 12510, \"acRate\": \"29.2%\"}",
            "hints": [
                "String <code>t</code> can be only constructed if it is a rotated version of string <code>s</code>.",
                "Use KMP algorithm or Z algorithm to find the number of indices from where <code>s</code> is equal to <code>t</code>.",
                "Use Dynamic Programming to count the number of ways."
            ]
        },
        "similar": [],
        "hints": [
            "String <code>t</code> can be only constructed if it is a rotated version of string <code>s</code>.",
            "Use KMP algorithm or Z algorithm to find the number of indices from where <code>s</code> is equal to <code>t</code>.",
            "Use Dynamic Programming to count the number of ways."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ]
    }
}