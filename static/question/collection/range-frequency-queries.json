{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2080",
      "title": "Range Frequency Queries",
      "titleSlug": "range-frequency-queries",
      "content": "<p>Design a data structure to find the <strong>frequency</strong> of a given value in a given subarray.</p>\n\n<p>The <strong>frequency</strong> of a value in a subarray is the number of occurrences of that value in the subarray.</p>\n\n<p>Implement the <code>RangeFreqQuery</code> class:</p>\n\n<ul>\n\t<li><code>RangeFreqQuery(int[] arr)</code> Constructs an instance of the class with the given <strong>0-indexed</strong> integer array <code>arr</code>.</li>\n\t<li><code>int query(int left, int right, int value)</code> Returns the <strong>frequency</strong> of <code>value</code> in the subarray <code>arr[left...right]</code>.</li>\n</ul>\n\n<p>A <strong>subarray</strong> is a contiguous sequence of elements within an array. <code>arr[left...right]</code> denotes the subarray that contains the elements of <code>nums</code> between indices <code>left</code> and <code>right</code> (<strong>inclusive</strong>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;RangeFreqQuery&quot;, &quot;query&quot;, &quot;query&quot;]\n[[[12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]], [1, 2, 4], [0, 11, 33]]\n<strong>Output</strong>\n[null, 1, 2]\n\n<strong>Explanation</strong>\nRangeFreqQuery rangeFreqQuery = new RangeFreqQuery([12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]);\nrangeFreqQuery.query(1, 2, 4); // return 1. The value 4 occurs 1 time in the subarray [33, 4]\nrangeFreqQuery.query(0, 11, 33); // return 2. The value 33 occurs 2 times in the whole array.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= arr[i], value &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= left &lt;= right &lt; arr.length</code></li>\n\t<li>At most <code>10<sup>5</sup></code> calls will be made to <code>query</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 612,
      "dislikes": 27,
      "similarQuestions": "[]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Binary Search",
          "slug": "binary-search"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Segment Tree",
          "slug": "segment-tree"
        }
      ],
      "stats": "{\"totalAccepted\": \"18.9K\", \"totalSubmission\": \"48.2K\", \"totalAcceptedRaw\": 18911, \"totalSubmissionRaw\": 48166, \"acRate\": \"39.3%\"}",
      "hints": [
        "The queries must be answered efficiently to avoid time limit exceeded verdict.",
        "Store the elements of the array in a data structure that helps answering the queries efficiently.",
        "Use a hash table that stored for each value, the indices where that value appeared.",
        "Use binary search over the indices of a value to find its range frequency."
      ]
    },
    "similar": [],
    "hints": [
      "The queries must be answered efficiently to avoid time limit exceeded verdict.",
      "Store the elements of the array in a data structure that helps answering the queries efficiently.",
      "Use a hash table that stored for each value, the indices where that value appeared.",
      "Use binary search over the indices of a value to find its range frequency."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ]
  }
}