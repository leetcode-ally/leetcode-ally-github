{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2221",
      "title": "Find Triangular Sum of an Array",
      "titleSlug": "find-triangular-sum-of-an-array",
      "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>, where <code>nums[i]</code> is a digit between <code>0</code> and <code>9</code> (<strong>inclusive</strong>).</p>\n\n<p>The <strong>triangular sum</strong> of <code>nums</code> is the value of the only element present in <code>nums</code> after the following process terminates:</p>\n\n<ol>\n\t<li>Let <code>nums</code> comprise of <code>n</code> elements. If <code>n == 1</code>, <strong>end</strong> the process. Otherwise, <strong>create</strong> a new <strong>0-indexed</strong> integer array <code>newNums</code> of length <code>n - 1</code>.</li>\n\t<li>For each index <code>i</code>, where <code>0 &lt;= i &lt;&nbsp;n - 1</code>, <strong>assign</strong> the value of <code>newNums[i]</code> as <code>(nums[i] + nums[i+1]) % 10</code>, where <code>%</code> denotes modulo operator.</li>\n\t<li><strong>Replace</strong> the array <code>nums</code> with <code>newNums</code>.</li>\n\t<li><strong>Repeat</strong> the entire process starting from step 1.</li>\n</ol>\n\n<p>Return <em>the triangular sum of</em> <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/02/22/ex1drawio.png\" style=\"width: 250px; height: 250px;\" />\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong>\nThe above diagram depicts the process from which we obtain the triangular sum of the array.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nSince there is only one element in nums, the triangular sum is the value of that element itself.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 9</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 1027,
      "dislikes": 52,
      "similarQuestions": "[{\"title\": \"Pascal's Triangle II\", \"titleSlug\": \"pascals-triangle-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Calculate Digit Sum of a String\", \"titleSlug\": \"calculate-digit-sum-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Min Max Game\", \"titleSlug\": \"min-max-game\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        },
        {
          "name": "Combinatorics",
          "slug": "combinatorics"
        }
      ],
      "stats": "{\"totalAccepted\": \"69.5K\", \"totalSubmission\": \"88.7K\", \"totalAcceptedRaw\": 69495, \"totalSubmissionRaw\": 88659, \"acRate\": \"78.4%\"}",
      "hints": [
        "Try simulating the entire process.",
        "To reduce space, use a temporary array to update nums in every step instead of creating a new array at each step."
      ]
    },
    "similar": [
      {
        "difficulty": "Easy",
        "titleSlug": "pascals-triangle-ii",
        "title": "Pascal's Triangle II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "calculate-digit-sum-of-a-string",
        "title": "Calculate Digit Sum of a String",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "min-max-game",
        "title": "Min Max Game",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Try simulating the entire process.",
      "To reduce space, use a temporary array to update nums in every step instead of creating a new array at each step."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ]
  }
}