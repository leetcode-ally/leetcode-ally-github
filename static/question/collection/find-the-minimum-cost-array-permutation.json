{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3149",
            "title": "Find the Minimum Cost Array Permutation",
            "titleSlug": "find-the-minimum-cost-array-permutation",
            "content": "<p>You are given an array <code>nums</code> which is a <span data-keyword=\"permutation\">permutation</span> of <code>[0, 1, 2, ..., n - 1]</code>. The <strong>score</strong> of any permutation of <code>[0, 1, 2, ..., n - 1]</code> named <code>perm</code> is defined as:</p>\n\n<p><code>score(perm) = |perm[0] - nums[perm[1]]| + |perm[1] - nums[perm[2]]| + ... + |perm[n - 1] - nums[perm[0]]|</code></p>\n\n<p>Return the permutation <code>perm</code> which has the <strong>minimum</strong> possible score. If <em>multiple</em> permutations exist with this score, return the one that is <span data-keyword=\"lexicographically-smaller-array\">lexicographically smallest</span> among them.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,0,2]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,1,2]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/04/04/example0gif.gif\" style=\"width: 235px; height: 235px;\" /></strong></p>\n\n<p>The lexicographically smallest permutation with minimum cost is <code>[0,1,2]</code>. The cost of this permutation is <code>|0 - 0| + |1 - 2| + |2 - 1| = 2</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [0,2,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,2,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/04/04/example1gif.gif\" style=\"width: 235px; height: 235px;\" /></strong></p>\n\n<p>The lexicographically smallest permutation with minimum cost is <code>[0,2,1]</code>. The cost of this permutation is <code>|0 - 1| + |2 - 2| + |1 - 0| = 2</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n == nums.length &lt;= 14</code></li>\n\t<li><code>nums</code> is a permutation of <code>[0, 1, 2, ..., n - 1]</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 96,
            "dislikes": 6,
            "similarQuestions": "[{\"title\": \"Shortest Path Visiting All Nodes\", \"titleSlug\": \"shortest-path-visiting-all-nodes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find the Shortest Superstring\", \"titleSlug\": \"find-the-shortest-superstring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "stats": "{\"totalAccepted\": \"3.7K\", \"totalSubmission\": \"15.9K\", \"totalAcceptedRaw\": 3736, \"totalSubmissionRaw\": 15895, \"acRate\": \"23.5%\"}",
            "hints": [
                "The score function is cyclic, so we can always set <code>perm[0] = 0</code> for the smallest lexical order.",
                "It\u2019s similar to the Traveling Salesman Problem. Use Dynamic Programming.",
                "Use a bitmask to track which elements have been assigned to <code>perm</code>."
            ]
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "shortest-path-visiting-all-nodes",
                "title": "Shortest Path Visiting All Nodes",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "find-the-shortest-superstring",
                "title": "Find the Shortest Superstring",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The score function is cyclic, so we can always set <code>perm[0] = 0</code> for the smallest lexical order.",
            "It\u2019s similar to the Traveling Salesman Problem. Use Dynamic Programming.",
            "Use a bitmask to track which elements have been assigned to <code>perm</code>."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ]
    }
}