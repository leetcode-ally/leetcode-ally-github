{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "2293",
      "title": "Min Max Game",
      "titleSlug": "min-max-game",
      "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> whose length is a power of <code>2</code>.</p>\n\n<p>Apply the following algorithm on <code>nums</code>:</p>\n\n<ol>\n\t<li>Let <code>n</code> be the length of <code>nums</code>. If <code>n == 1</code>, <strong>end</strong> the process. Otherwise, <strong>create</strong> a new <strong>0-indexed</strong> integer array <code>newNums</code> of length <code>n / 2</code>.</li>\n\t<li>For every <strong>even</strong> index <code>i</code> where <code>0 &lt;= i &lt; n / 2</code>, <strong>assign</strong> the value of <code>newNums[i]</code> as <code>min(nums[2 * i], nums[2 * i + 1])</code>.</li>\n\t<li>For every <strong>odd</strong> index <code>i</code> where <code>0 &lt;= i &lt; n / 2</code>, <strong>assign</strong> the value of <code>newNums[i]</code> as <code>max(nums[2 * i], nums[2 * i + 1])</code>.</li>\n\t<li><strong>Replace</strong> the array <code>nums</code> with <code>newNums</code>.</li>\n\t<li><strong>Repeat</strong> the entire process starting from step 1.</li>\n</ol>\n\n<p>Return <em>the last number that remains in </em><code>nums</code><em> after applying the algorithm.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/04/13/example1drawio-1.png\" style=\"width: 500px; height: 240px;\" />\n<pre>\n<strong>Input:</strong> nums = [1,3,5,2,4,8,2,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The following arrays are the results of applying the algorithm repeatedly.\nFirst: nums = [1,5,4,2]\nSecond: nums = [1,4]\nThird: nums = [1]\n1 is the last remaining number, so we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 3 is already the last remaining number, so we return 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1024</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>nums.length</code> is a power of <code>2</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": 510,
      "dislikes": 24,
      "similarQuestions": "[{\"title\": \"Elimination Game\", \"titleSlug\": \"elimination-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Triangular Sum of an Array\", \"titleSlug\": \"find-triangular-sum-of-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Simulation",
          "slug": "simulation"
        }
      ],
      "stats": "{\"totalAccepted\": \"43.7K\", \"totalSubmission\": \"69.1K\", \"totalAcceptedRaw\": 43658, \"totalSubmissionRaw\": 69122, \"acRate\": \"63.2%\"}",
      "hints": [
        "Simply simulate the algorithm.",
        "Note that the size of the array decreases exponentially, so the process will terminate after just O(log n) steps."
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "elimination-game",
        "title": "Elimination Game",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "find-triangular-sum-of-an-array",
        "title": "Find Triangular Sum of an Array",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Simply simulate the algorithm.",
      "Note that the size of the array decreases exponentially, so the process will terminate after just O(log n) steps."
    ],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ]
  }
}