{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3154",
            "title": "Find Number of Ways to Reach the K-th Stair",
            "titleSlug": "find-number-of-ways-to-reach-the-k-th-stair",
            "content": "<p>You are given a <strong>non-negative</strong> integer <code>k</code>. There exists a staircase with an infinite number of stairs, with the <strong>lowest</strong> stair numbered 0.</p>\n\n<p>Alice has an integer <code>jump</code>, with an initial value of 0. She starts on stair 1 and wants to reach stair <code>k</code> using <strong>any</strong> number of <strong>operations</strong>. If she is on stair <code>i</code>, in one <strong>operation</strong> she can:</p>\n\n<ul>\n\t<li>Go down to stair <code>i - 1</code>. This operation <strong>cannot</strong> be used consecutively or on stair 0.</li>\n\t<li>Go up to stair <code>i + 2<sup>jump</sup></code>. And then, <code>jump</code> becomes <code>jump + 1</code>.</li>\n</ul>\n\n<p>Return the <em>total</em> number of ways Alice can reach stair <code>k</code>.</p>\n\n<p><strong>Note</strong> that it is possible that Alice reaches the stair <code>k</code>, and performs some operations to reach the stair <code>k</code> again.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">k = 0</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The 2 possible ways of reaching stair 0 are:</p>\n\n<ul>\n\t<li>Alice starts at stair 1.\n\t<ul>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t</ul>\n\t</li>\n\t<li>Alice starts at stair 1.\n\t<ul>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t\t<li>Using an operation of the second type, she goes up 2<sup>0</sup> stairs to reach stair 1.</li>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t</ul>\n\t</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">k = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The 4 possible ways of reaching stair 1 are:</p>\n\n<ul>\n\t<li>Alice starts at stair 1. Alice is at stair 1.</li>\n\t<li>Alice starts at stair 1.\n\t<ul>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t\t<li>Using an operation of the second type, she goes up 2<sup>0</sup> stairs to reach stair 1.</li>\n\t</ul>\n\t</li>\n\t<li>Alice starts at stair 1.\n\t<ul>\n\t\t<li>Using an operation of the second type, she goes up 2<sup>0</sup> stairs to reach stair 2.</li>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 1.</li>\n\t</ul>\n\t</li>\n\t<li>Alice starts at stair 1.\n\t<ul>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t\t<li>Using an operation of the second type, she goes up 2<sup>0</sup> stairs to reach stair 1.</li>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 0.</li>\n\t\t<li>Using an operation of the second type, she goes up 2<sup>1</sup> stairs to reach stair 2.</li>\n\t\t<li>Using an operation of the first type, she goes down 1 stair to reach stair 1.</li>\n\t</ul>\n\t</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 117,
            "dislikes": 7,
            "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Min Cost Climbing Stairs\", \"titleSlug\": \"min-cost-climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Memoization",
                    "slug": "memoization"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "stats": "{\"totalAccepted\": \"9.9K\", \"totalSubmission\": \"27.2K\", \"totalAcceptedRaw\": 9918, \"totalSubmissionRaw\": 27233, \"acRate\": \"36.4%\"}",
            "hints": [
                "On using <code>x</code> operations of the second type and <code>y</code> operations of the first type, the stair <code>2<sup>x + 1</sup> - y</code> is reached.",
                "Since first operations cannot be consecutive, there are exactly <code>x + 1</code> positions (before and after each power of 2) to perform the second operation.",
                "Using combinatorics, we have <sup>x + 1</sup>C<sub>y</sub> number of ways to select the positions of second operations."
            ]
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "climbing-stairs",
                "title": "Climbing Stairs",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "min-cost-climbing-stairs",
                "title": "Min Cost Climbing Stairs",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "On using <code>x</code> operations of the second type and <code>y</code> operations of the first type, the stair <code>2<sup>x + 1</sup> - y</code> is reached.",
            "Since first operations cannot be consecutive, there are exactly <code>x + 1</code> positions (before and after each power of 2) to perform the second operation.",
            "Using combinatorics, we have <sup>x + 1</sup>C<sub>y</sub> number of ways to select the positions of second operations."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ]
    }
}