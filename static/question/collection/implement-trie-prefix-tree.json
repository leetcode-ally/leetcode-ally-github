{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "208",
      "title": "Implement Trie (Prefix Tree)",
      "titleSlug": "implement-trie-prefix-tree",
      "content": "<p>A <a href=\"https://en.wikipedia.org/wiki/Trie\" target=\"_blank\"><strong>trie</strong></a> (pronounced as &quot;try&quot;) or <strong>prefix tree</strong> is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.</p>\n\n<p>Implement the Trie class:</p>\n\n<ul>\n\t<li><code>Trie()</code> Initializes the trie object.</li>\n\t<li><code>void insert(String word)</code> Inserts the string <code>word</code> into the trie.</li>\n\t<li><code>boolean search(String word)</code> Returns <code>true</code> if the string <code>word</code> is in the trie (i.e., was inserted before), and <code>false</code> otherwise.</li>\n\t<li><code>boolean startsWith(String prefix)</code> Returns <code>true</code> if there is a previously inserted string <code>word</code> that has the prefix <code>prefix</code>, and <code>false</code> otherwise.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;Trie&quot;, &quot;insert&quot;, &quot;search&quot;, &quot;search&quot;, &quot;startsWith&quot;, &quot;insert&quot;, &quot;search&quot;]\n[[], [&quot;apple&quot;], [&quot;apple&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;], [&quot;app&quot;]]\n<strong>Output</strong>\n[null, null, true, false, true, null, true]\n\n<strong>Explanation</strong>\nTrie trie = new Trie();\ntrie.insert(&quot;apple&quot;);\ntrie.search(&quot;apple&quot;);   // return True\ntrie.search(&quot;app&quot;);     // return False\ntrie.startsWith(&quot;app&quot;); // return True\ntrie.insert(&quot;app&quot;);\ntrie.search(&quot;app&quot;);     // return True\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length, prefix.length &lt;= 2000</code></li>\n\t<li><code>word</code> and <code>prefix</code> consist only of lowercase English letters.</li>\n\t<li>At most <code>3 * 10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>insert</code>, <code>search</code>, and <code>startsWith</code>.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 11129,
      "dislikes": 126,
      "similarQuestions": "[{\"title\": \"Design Add and Search Words Data Structure\", \"titleSlug\": \"design-add-and-search-words-data-structure\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Search Autocomplete System\", \"titleSlug\": \"design-search-autocomplete-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Replace Words\", \"titleSlug\": \"replace-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement Magic Dictionary\", \"titleSlug\": \"implement-magic-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encrypt and Decrypt Strings\", \"titleSlug\": \"encrypt-and-decrypt-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Implement Trie II (Prefix Tree)\", \"titleSlug\": \"implement-trie-ii-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Design",
          "slug": "design"
        },
        {
          "name": "Trie",
          "slug": "trie"
        }
      ],
      "stats": "{\"totalAccepted\": \"945.3K\", \"totalSubmission\": \"1.5M\", \"totalAcceptedRaw\": 945338, \"totalSubmissionRaw\": 1468999, \"acRate\": \"64.4%\"}",
      "hints": []
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "design-add-and-search-words-data-structure",
        "title": "Design Add and Search Words Data Structure",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "design-search-autocomplete-system",
        "title": "Design Search Autocomplete System",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "replace-words",
        "title": "Replace Words",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "implement-magic-dictionary",
        "title": "Implement Magic Dictionary",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "encrypt-and-decrypt-strings",
        "title": "Encrypt and Decrypt Strings",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "implement-trie-ii-prefix-tree",
        "title": "Implement Trie II (Prefix Tree)",
        "isPaidOnly": true
      }
    ],
    "hints": [],
    "relatedTopics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ]
  }
}