{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "42",
      "title": "Trapping Rain Water",
      "titleSlug": "trapping-rain-water",
      "content": "<p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\" style=\"width: 412px; height: 161px;\" />\n<pre>\n<strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [4,2,0,3,2,5]\n<strong>Output:</strong> 9\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == height.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Hard",
      "likes": 30142,
      "dislikes": 448,
      "similarQuestions": "[{\"title\": \"Container With Most Water\", \"titleSlug\": \"container-with-most-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Trapping Rain Water II\", \"titleSlug\": \"trapping-rain-water-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Pour Water\", \"titleSlug\": \"pour-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Value of an Ordered Triplet II\", \"titleSlug\": \"maximum-value-of-an-ordered-triplet-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Array",
          "slug": "array"
        },
        {
          "name": "Two Pointers",
          "slug": "two-pointers"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Stack",
          "slug": "stack"
        },
        {
          "name": "Monotonic Stack",
          "slug": "monotonic-stack"
        }
      ],
      "stats": "{\"totalAccepted\": \"1.8M\", \"totalSubmission\": \"3M\", \"totalAcceptedRaw\": 1805064, \"totalSubmissionRaw\": 2989370, \"acRate\": \"60.4%\"}",
      "hints": []
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "container-with-most-water",
        "title": "Container With Most Water",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "product-of-array-except-self",
        "title": "Product of Array Except Self",
        "isPaidOnly": false
      },
      {
        "difficulty": "Hard",
        "titleSlug": "trapping-rain-water-ii",
        "title": "Trapping Rain Water II",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "pour-water",
        "title": "Pour Water",
        "isPaidOnly": true
      },
      {
        "difficulty": "Medium",
        "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
        "title": "Maximum Value of an Ordered Triplet II",
        "isPaidOnly": false
      }
    ],
    "hints": [],
    "relatedTopics": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ]
  }
}