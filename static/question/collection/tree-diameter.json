{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "1245",
      "title": "Tree Diameter",
      "titleSlug": "tree-diameter",
      "content": null,
      "isPaidOnly": true,
      "difficulty": "Medium",
      "likes": 772,
      "dislikes": 18,
      "similarQuestions": "[{\"title\": \"Count Subtrees With Max Distance Between Cities\", \"titleSlug\": \"count-subtrees-with-max-distance-between-cities\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Tree",
          "slug": "tree"
        },
        {
          "name": "Depth-First Search",
          "slug": "depth-first-search"
        },
        {
          "name": "Breadth-First Search",
          "slug": "breadth-first-search"
        },
        {
          "name": "Graph",
          "slug": "graph"
        },
        {
          "name": "Topological Sort",
          "slug": "topological-sort"
        }
      ],
      "stats": "{\"totalAccepted\": \"33.4K\", \"totalSubmission\": \"54.8K\", \"totalAcceptedRaw\": 33419, \"totalSubmissionRaw\": 54818, \"acRate\": \"61.0%\"}",
      "hints": [
        "Start at any node A and traverse the tree to find the furthest node from it, let's call it B.",
        "Having found the furthest node B, traverse the tree from B to find the furthest node from it, lets call it C.",
        "The distance between B and C is the tree diameter."
      ]
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "count-subtrees-with-max-distance-between-cities",
        "title": "Count Subtrees With Max Distance Between Cities",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "Start at any node A and traverse the tree to find the furthest node from it, let's call it B.",
      "Having found the furthest node B, traverse the tree from B to find the furthest node from it, lets call it C.",
      "The distance between B and C is the tree diameter."
    ],
    "relatedTopics": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ]
  }
}