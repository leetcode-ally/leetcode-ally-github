{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "647",
      "title": "Palindromic Substrings",
      "titleSlug": "palindromic-substrings",
      "content": "<p>Given a string <code>s</code>, return <em>the number of <strong>palindromic substrings</strong> in it</em>.</p>\n\n<p>A string is a <strong>palindrome</strong> when it reads the same backward as forward.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within the string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Three palindromic strings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Six palindromic strings: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 9864,
      "dislikes": 208,
      "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "String",
          "slug": "string"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        }
      ],
      "stats": "{\"totalAccepted\": \"655.2K\", \"totalSubmission\": \"961.1K\", \"totalAcceptedRaw\": 655191, \"totalSubmissionRaw\": 961104, \"acRate\": \"68.2%\"}",
      "hints": [
        "How can we reuse a previously computed palindrome to compute a larger palindrome?",
        "If “aba” is a palindrome, is “xabax” a palindrome? Similarly is “xabay” a palindrome?",
        "Complexity based hint:</br>\r\nIf we use brute force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation?"
      ]
    },
    "similar": [
      {
        "difficulty": "Medium",
        "titleSlug": "longest-palindromic-substring",
        "title": "Longest Palindromic Substring",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "longest-palindromic-subsequence",
        "title": "Longest Palindromic Subsequence",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "How can we reuse a previously computed palindrome to compute a larger palindrome?",
      "If “aba” is a palindrome, is “xabax” a palindrome? Similarly is “xabay” a palindrome?",
      "Complexity based hint:</br>\r\nIf we use brute force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation?"
    ],
    "relatedTopics": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ]
  }
}