{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": "264",
      "title": "Ugly Number II",
      "titleSlug": "ugly-number-ii",
      "content": "<p>An <strong>ugly number</strong> is a positive integer whose prime factors are limited to <code>2</code>, <code>3</code>, and <code>5</code>.</p>\n\n<p>Given an integer <code>n</code>, return <em>the</em> <code>n<sup>th</sup></code> <em><strong>ugly number</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1690</code></li>\n</ul>\n",
      "isPaidOnly": false,
      "difficulty": "Medium",
      "likes": 5800,
      "dislikes": 293,
      "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Super Ugly Number\", \"titleSlug\": \"super-ugly-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number III\", \"titleSlug\": \"ugly-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
      "topicTags": [
        {
          "name": "Hash Table",
          "slug": "hash-table"
        },
        {
          "name": "Math",
          "slug": "math"
        },
        {
          "name": "Dynamic Programming",
          "slug": "dynamic-programming"
        },
        {
          "name": "Heap (Priority Queue)",
          "slug": "heap-priority-queue"
        }
      ],
      "stats": "{\"totalAccepted\": \"327.8K\", \"totalSubmission\": \"710K\", \"totalAcceptedRaw\": 327760, \"totalSubmissionRaw\": 710020, \"acRate\": \"46.2%\"}",
      "hints": [
        "The naive approach is to call <code>isUgly</code> for every number until you reach the n<sup>th</sup> one. Most numbers are <i>not</i> ugly. Try to focus your effort on generating only the ugly ones.",
        "An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.",
        "The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>.",
        "Assume you have U<sub>k</sub>, the k<sup>th</sup> ugly number. Then U<sub>k+1</sub> must be Min(L<sub>1</sub> * 2, L<sub>2</sub> * 3, L<sub>3</sub> * 5)."
      ]
    },
    "similar": [
      {
        "difficulty": "Hard",
        "titleSlug": "merge-k-sorted-lists",
        "title": "Merge k Sorted Lists",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "count-primes",
        "title": "Count Primes",
        "isPaidOnly": false
      },
      {
        "difficulty": "Easy",
        "titleSlug": "ugly-number",
        "title": "Ugly Number",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "perfect-squares",
        "title": "Perfect Squares",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "super-ugly-number",
        "title": "Super Ugly Number",
        "isPaidOnly": false
      },
      {
        "difficulty": "Medium",
        "titleSlug": "ugly-number-iii",
        "title": "Ugly Number III",
        "isPaidOnly": false
      }
    ],
    "hints": [
      "The naive approach is to call <code>isUgly</code> for every number until you reach the n<sup>th</sup> one. Most numbers are <i>not</i> ugly. Try to focus your effort on generating only the ugly ones.",
      "An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.",
      "The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>.",
      "Assume you have U<sub>k</sub>, the k<sup>th</sup> ugly number. Then U<sub>k+1</sub> must be Min(L<sub>1</sub> * 2, L<sub>2</sub> * 3, L<sub>3</sub> * 5)."
    ],
    "relatedTopics": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ]
  }
}